{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/a.PNG","path":"images/a.PNG","modified":0,"renderable":0},{"_id":"source/images/Personal/Blog.png","path":"images/Personal/Blog.png","modified":0,"renderable":0},{"_id":"source/images/Personal/Logo.png","path":"images/Personal/Logo.png","modified":0,"renderable":0},{"_id":"source/images/python/Python-banner.png","path":"images/python/Python-banner.png","modified":0,"renderable":0},{"_id":"source/images/python/Python-thumbnail.png","path":"images/python/Python-thumbnail.png","modified":0,"renderable":0},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"source/images/wall.jpg","path":"images/wall.jpg","modified":0,"renderable":0},{"_id":"themes/icarus/source/css/images/avatar.png","path":"css/images/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/logo.png","path":"css/images/logo.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","path":"libs/justified-gallery/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","path":"libs/justified-gallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/styles.css","path":"libs/open-sans/styles.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","path":"libs/source-code-pro/styles.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-brands.css","path":"libs/font-awesome5/css/fa-brands.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-brands.min.css","path":"libs/font-awesome5/css/fa-brands.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-solid.css","path":"libs/font-awesome5/css/fa-solid.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-solid.min.css","path":"libs/font-awesome5/css/fa-solid.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fontawesome.css","path":"libs/font-awesome5/css/fontawesome.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fontawesome.min.css","path":"libs/font-awesome5/css/fontawesome.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.woff2","path":"libs/font-awesome5/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.woff2","path":"libs/font-awesome5/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.woff","path":"libs/font-awesome5/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","path":"libs/lightgallery/css/lg-fb-comment-box.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","path":"libs/lightgallery/css/lg-fb-comment-box.css.map","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","path":"libs/lightgallery/css/lg-fb-comment-box.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","path":"libs/lightgallery/css/lg-transitions.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","path":"libs/lightgallery/css/lg-transitions.css.map","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","path":"libs/lightgallery/css/lg-transitions.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","path":"libs/lightgallery/css/lightgallery.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","path":"libs/lightgallery/css/lightgallery.css.map","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","path":"libs/lightgallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","path":"libs/lightgallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","path":"libs/lightgallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","path":"libs/lightgallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","path":"libs/lightgallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","path":"libs/lightgallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","path":"libs/lightgallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","path":"libs/lightgallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","path":"libs/lightgallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","path":"libs/lightgallery/js/lg-autoplay.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","path":"libs/lightgallery/js/lg-autoplay.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","path":"libs/lightgallery/js/lg-fullscreen.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","path":"libs/lightgallery/js/lg-fullscreen.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","path":"libs/lightgallery/js/lg-hash.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","path":"libs/lightgallery/js/lg-hash.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","path":"libs/lightgallery/js/lg-pager.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","path":"libs/lightgallery/js/lg-pager.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","path":"libs/lightgallery/js/lg-share.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","path":"libs/lightgallery/js/lg-share.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","path":"libs/lightgallery/js/lg-thumbnail.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","path":"libs/lightgallery/js/lg-thumbnail.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","path":"libs/lightgallery/js/lg-video.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","path":"libs/lightgallery/js/lg-video.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","path":"libs/lightgallery/js/lg-zoom.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","path":"libs/lightgallery/js/lg-zoom.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","path":"libs/lightgallery/js/lightgallery.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","path":"libs/lightgallery/js/lightgallery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","path":"libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.eot","path":"libs/font-awesome5/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.ttf","path":"libs/font-awesome5/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.woff","path":"libs/font-awesome5/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","path":"libs/jquery/2.1.3/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.eot","path":"libs/font-awesome5/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.ttf","path":"libs/font-awesome5/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.svg","path":"libs/font-awesome5/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.svg","path":"libs/font-awesome5/webfonts/fa-brands-400.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/icarus/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1527735146000},{"_id":"themes/icarus/LICENSE","hash":"df00918fa95de563927fd92b26f14c7affdc3052","modified":1527735146000},{"_id":"themes/icarus/README.md","hash":"acd2d5d12820b065345d68f88bfc3a739f8d8ae2","modified":1527735146000},{"_id":"themes/icarus/_config.yml","hash":"4df77a29d4e3c194febefa3b6fca9d2cecb97bfa","modified":1528314349812},{"_id":"themes/icarus/_config.yml.example","hash":"b389a45f97c36b24c267b75447ee26dcfc6f2fe3","modified":1527735146000},{"_id":"themes/icarus/package.json","hash":"1bc52ef10a33df23e56bd73c927f605019c87d41","modified":1527735146000},{"_id":"source/about/index.md","hash":"da1cf8bc56daf3e9b3458b047ab1dbb6d5b9c109","modified":1528315155776},{"_id":"source/_posts/hello-world.md","hash":"5c057c4c17fd988ed909e131d4904994733dd545","modified":1528381594889},{"_id":"source/tags/index.md","hash":"f913370f50299b9b8b4cfd73fbdd5c07f4950549","modified":1528263210768},{"_id":"source/categories/index.md","hash":"355b97bd4efd8ae99cc970fbe7b70d01dac34305","modified":1528314516319},{"_id":"source/images/a.PNG","hash":"0dbf4db974bfdd8ad1448f5520eda493a5a39b14","modified":1528261972718},{"_id":"themes/icarus/languages/en.yml","hash":"ade241498b85503a8953a1deca963222f47067a7","modified":1527735146000},{"_id":"themes/icarus/languages/es.yml","hash":"d7432219be5bee4cb569331378ade61b749688e0","modified":1527735146000},{"_id":"themes/icarus/languages/fr.yml","hash":"cb3e597cbec7e8f458858c457bafd1f3a225083d","modified":1527735146000},{"_id":"themes/icarus/languages/id.yml","hash":"e4961da507f66c8f7c37f85653a9437cb2056bf6","modified":1527735146000},{"_id":"themes/icarus/languages/ja.yml","hash":"ff972961e5f468a695d80d21b62c3e9032cdf561","modified":1527735146000},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"3c5d5293575593705b9a2dfa9d97b017eb4bc8c3","modified":1527735146000},{"_id":"themes/icarus/languages/ko.yml","hash":"7c4ad4577dc0577ad2ca1c0410507f5e5fadf530","modified":1527735146000},{"_id":"themes/icarus/languages/ru.yml","hash":"d1aab2b0c939d0c6020f881d664b660a01ee7327","modified":1527735146000},{"_id":"themes/icarus/languages/tr.yml","hash":"8b7eb6aec264db50dbabea89f680acca256f4cd1","modified":1527735146000},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"3dc8ec524805afd090438be717908750da439204","modified":1527735146000},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"d8d96a0a17c20af11919ce036e87379a6b163db9","modified":1527735146000},{"_id":"themes/icarus/layout/archive.ejs","hash":"a369f50b7bb4a3fb30c95dccc813f0552172d827","modified":1527735146000},{"_id":"themes/icarus/layout/categories.ejs","hash":"aa95629b770cff8cca9d663aeb6b17928f070de5","modified":1527735146000},{"_id":"themes/icarus/layout/category.ejs","hash":"1d407f9176db84e83062c52ad4755aaea9e74401","modified":1527735146000},{"_id":"themes/icarus/layout/index.ejs","hash":"43e971ebc35657b18e08a049559790348a16666f","modified":1527735146000},{"_id":"themes/icarus/layout/layout.ejs","hash":"6f01b3d46d184a820297f9542497808b152bb09e","modified":1527735146000},{"_id":"themes/icarus/layout/page.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1527735146000},{"_id":"themes/icarus/layout/post.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1527735146000},{"_id":"themes/icarus/layout/tags.ejs","hash":"b0fcea68d7c11e5899bf0375d80997685111653f","modified":1527735146000},{"_id":"themes/icarus/layout/tag.ejs","hash":"f6c220d4e5c231028bc71ddc11aec97d7b5a9943","modified":1527735146000},{"_id":"themes/icarus/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1527735146000},{"_id":"themes/icarus/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1527735146000},{"_id":"source/_posts/python/grammar-1.md","hash":"3857d30e7d1dcf8bce9dfa0d9ed37f9c985db9a1","modified":1528393441590},{"_id":"source/images/Personal/Blog.png","hash":"77dd6fa2321cc576353561c4056bceba93934d34","modified":1528312744762},{"_id":"source/images/Personal/Logo.png","hash":"480e52bc57ff54a8e417bc5f3522193c7fff3b30","modified":1528312437833},{"_id":"source/images/python/Python-banner.png","hash":"045dc09806f92c878fba8a763cd70f5f5cbbc888","modified":1528382406332},{"_id":"source/images/python/Python-thumbnail.png","hash":"2289e0a3a59b90b39b7514f84fc45b5fb6346b99","modified":1528382725536},{"_id":"themes/icarus/_source/about/index.md","hash":"2847759c65295fdc47685cc32e10ae30b2f022ae","modified":1527735146000},{"_id":"themes/icarus/_source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1527735146000},{"_id":"themes/icarus/_source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1527735146000},{"_id":"themes/icarus/layout/comment/changyan.ejs","hash":"b4bd2e641af59e06becaa8f2dc97867f023b8dcf","modified":1527735146000},{"_id":"themes/icarus/layout/comment/counter.ejs","hash":"57c194d0fa268ce2f3e9c755b3154b8a0709f613","modified":1527735146000},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"1b32a90f400dc580f4b8298de75b94429ca6de68","modified":1527735146000},{"_id":"themes/icarus/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1527735146000},{"_id":"themes/icarus/layout/comment/facebook.ejs","hash":"5ee16430a4435c2fead0275ff83fc98092d73d4c","modified":1527735146000},{"_id":"themes/icarus/layout/comment/gitment.ejs","hash":"c7998209b9a766eeba6976dd4bdffb1f87469358","modified":1527735146000},{"_id":"themes/icarus/layout/comment/index.ejs","hash":"0bce9ca0767b49d2a9fc026a6004a8526a20624b","modified":1527735146000},{"_id":"themes/icarus/layout/comment/isso.ejs","hash":"4f8b81ff5bb418ec11ce080d515f247bfe436014","modified":1527735146000},{"_id":"themes/icarus/layout/comment/livere.ejs","hash":"792e4f0e93b2bdc5abd85d447d804a5c608a9c5c","modified":1527735146000},{"_id":"themes/icarus/layout/comment/valine.ejs","hash":"0ea90a606f0d386a5ae0da83c0501cbb25319fde","modified":1527735146000},{"_id":"themes/icarus/layout/comment/scripts.ejs","hash":"d45f652268671de96c86d8ca50b9deaf011274f0","modified":1527735146000},{"_id":"themes/icarus/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1527735146000},{"_id":"themes/icarus/layout/common/article.ejs","hash":"9c260a551596f71e93177f2289b5cb1c4bc7d96c","modified":1527735146000},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"cbfe560fcab445d42ceeb5d1beba5957d5be5eaa","modified":1527735146000},{"_id":"themes/icarus/layout/common/head.ejs","hash":"daf0b5a6201e09782500795f3db84713a92c791a","modified":1527735146000},{"_id":"themes/icarus/layout/common/header.ejs","hash":"3131da8d8620a82090e3ad5c8ffc8316fb429309","modified":1527735146000},{"_id":"themes/icarus/layout/common/profile.ejs","hash":"a58bc5bdb7c0eeb8a224e357ace33554bfcd47be","modified":1528315793705},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"c0a1a9e53f89440c42c325d5bd8c7234652c8937","modified":1527735146000},{"_id":"themes/icarus/layout/common/sidebar.ejs","hash":"8cee4531fb0deca8f0951ef93f039028bc7f343c","modified":1527735146000},{"_id":"themes/icarus/layout/common/thumbnail.ejs","hash":"1b70f8a98cd8650b159bda858dbee38dbdb7f0c5","modified":1527735146000},{"_id":"themes/icarus/layout/common/timeline.ejs","hash":"48235931698f04ad0ff057a1693ce81e628f9e0a","modified":1527735146000},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"6a7bee18e666e627e62541a5e30906f87ba1bfe8","modified":1527735146000},{"_id":"themes/icarus/layout/plugin/scripts.ejs","hash":"e22f99652a220d926103801a3cad55ea9c450e05","modified":1527735146000},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"3e603a702d20c53fd3bcbeb570a16a86d54781ce","modified":1527735146000},{"_id":"themes/icarus/layout/search/index-mobile.ejs","hash":"50a727ac1dfe3073eb6fa6699ba01e66f4ac41c0","modified":1527735146000},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1527735146000},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1527735146000},{"_id":"themes/icarus/layout/search/index.ejs","hash":"24935e32e61d4706454b174ea3bed0726ae7fb34","modified":1527735146000},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"bcf275e42efbc6677a0fd35f5501e7618ffe9e4c","modified":1527735146000},{"_id":"themes/icarus/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1527735146000},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1527735146000},{"_id":"themes/icarus/layout/share/index.ejs","hash":"2a2c0095b95b11e5692bd8ad6a2337aa644189a2","modified":1527735146000},{"_id":"themes/icarus/layout/share/default.ejs","hash":"bddd4425db187d893a5599d69810fa4159d0c45e","modified":1527735146000},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"d9ebbb7f6ce2f25df5ae25e4a1fef3c08f7054b9","modified":1527735146000},{"_id":"themes/icarus/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1527735146000},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"583bda80cf15b3ef11fefbd1b502897dfff40100","modified":1527735146000},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"953d879b1a36c9de96813ad7b0184539c652a4e9","modified":1527735146000},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"aad118699718b62c0d3f3cfd6f17a181139a76af","modified":1527735146000},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"3b8ae5953990436893da9d68f910ebe592005659","modified":1527735146000},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"ca8c7bf555fb6ce4904f2c59160548405c2c8a82","modified":1527735146000},{"_id":"themes/icarus/source/css/_extend.styl","hash":"539e02107f35e8b3bdb9bf160dc212a433a7b60e","modified":1527735146000},{"_id":"themes/icarus/source/css/_variables.styl","hash":"d62af931be6612ec8c3a917836379a8cd92fbce1","modified":1527735146000},{"_id":"themes/icarus/source/css/style.styl","hash":"47937ac558f540926b671f075cf6dd142c7766f4","modified":1527735146000},{"_id":"themes/icarus/source/js/insight.js","hash":"f507ab7b2236349719f1af2c918f2f5c22d410c2","modified":1527735146000},{"_id":"themes/icarus/source/js/main.js","hash":"2c148f06c5799b5d7dd165c5162e780535e07a40","modified":1527735146000},{"_id":"source/images/wall.jpg","hash":"07a72bc6a585f203981e86325e8d313b74f14255","modified":1528267018711},{"_id":"themes/icarus/layout/common/post/banner.ejs","hash":"47ced3f03525698c79c6b1c07b48383fb6c496b2","modified":1527735146000},{"_id":"themes/icarus/layout/common/post/date.ejs","hash":"7817a75f3b8933ccf6366c1fdbce1e19912b0b35","modified":1527735146000},{"_id":"themes/icarus/layout/common/post/category.ejs","hash":"9977603db05db02a55996e1ab3620d682a3c87b2","modified":1527735146000},{"_id":"themes/icarus/layout/common/post/gallery.ejs","hash":"659f019761116313169148ec61773e7b84abb739","modified":1527735146000},{"_id":"themes/icarus/layout/common/post/nav.ejs","hash":"d7cd611e642327f33dff3963ef869c2b46824a11","modified":1527735146000},{"_id":"themes/icarus/layout/common/post/tag.ejs","hash":"d3f5a2a17b1235135c7d1f2f9bc5878ef7687e8c","modified":1527735146000},{"_id":"themes/icarus/layout/common/post/title.ejs","hash":"669ddb46fefa100856588351a7a2d30ad996b755","modified":1527735146000},{"_id":"themes/icarus/source/css/_partial/archive.styl","hash":"7417c254aae2b1b2132b3fb9f9efa4b32c09dd8d","modified":1527735146000},{"_id":"themes/icarus/source/css/_partial/article.styl","hash":"0e986e84211521d1392b40a37ec90d893c7ed4ee","modified":1527735146000},{"_id":"themes/icarus/source/css/_partial/comment.styl","hash":"784646796184d4f27918c22395288a2fafbf9554","modified":1527735146000},{"_id":"themes/icarus/source/css/_partial/footer.styl","hash":"484776654e4c1691dc844e6e93786a08855c1c99","modified":1527735146000},{"_id":"themes/icarus/source/css/_partial/header.styl","hash":"8098eb3eeaa5de156397214d06bd98529d5cade3","modified":1527735146000},{"_id":"themes/icarus/source/css/_partial/insight.styl","hash":"19833cd127f26ad90b06c115f8a96a30e0c0e53b","modified":1527735146000},{"_id":"themes/icarus/source/css/_partial/profile.styl","hash":"17ba50224f2538cb827ef4f50cd747a8ea747b5e","modified":1527735146000},{"_id":"themes/icarus/source/css/_partial/sidebar.styl","hash":"9e3eedf14572e362b4bafe87a078874d2eb5c5f1","modified":1527735146000},{"_id":"themes/icarus/source/css/_partial/timeline.styl","hash":"c813b98f4fc45b64d2e07e5d944745a654c8c943","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1527735146000},{"_id":"themes/icarus/source/css/_util/grid.styl","hash":"93fb6f1e2f40cd7d88ad0d56dd73d3f9a7bc853e","modified":1527735146000},{"_id":"themes/icarus/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1527735146000},{"_id":"themes/icarus/source/css/_util/mixin.styl","hash":"c8e1ddfc0fe9108bab592c7a73b73ce9344991fd","modified":1527735146000},{"_id":"themes/icarus/source/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1527735146000},{"_id":"themes/icarus/source/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1527735146000},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1527735146000},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1527735146000},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1527735146000},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-brands.css","hash":"3dc468f3a5d6dcbdb977b17c2c021f751c5bf7c6","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-brands.min.css","hash":"ae33d7d508d9fb4d8cc026f74007fae27017fc80","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-solid.css","hash":"5c960e4efb31a88b1319dcf63d4806175e3cb8cd","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-solid.min.css","hash":"ac3cc27cd41d44ed5d680541636604d0c397e5f6","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fontawesome.css","hash":"b818fea784ea93c6cc393d545bfc5e1ec2045ff7","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fontawesome.min.css","hash":"8518d72f88b376749244da2bdc96f261d9bd5645","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.woff2","hash":"0ec12ea1707f5bc812b627f41cccad2aff01e54b","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.woff2","hash":"1ba4dd60af529d1a72d0e57467c3bc0bbb728a4d","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.woff","hash":"7b4a63abc8476f745f09775d7465f0a6c33daf85","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1527735146000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1527735146000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1527735146000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1527735146000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.eot","hash":"d92c68223732a10ceffe54eecbe4ef70073e6dea","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.ttf","hash":"9b4bb228d5b132e69ff8b6b248262449879eff3e","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.woff","hash":"8b5cac7fbf1712c81d9cac19cda04e6a604eb9da","modified":1527735146000},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.eot","hash":"69aa0b829fd8562d0fb72948ce49ef201ff0ee83","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.ttf","hash":"31dc9b748b8d2bf6c3edec919e763791e037bbff","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.svg","hash":"24a7c19c323e91705be51641e87da7d5dfea5d10","modified":1527735146000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.svg","hash":"b07d27980b351d78f322260386450dde60d298cc","modified":1527735146000},{"_id":"public/tags/index.html","hash":"2082ef1891f7729005349ebb3e973b85228627df","modified":1528399072204},{"_id":"public/categories/index.html","hash":"04b478b727226e8d9d8dae71f92b1b357a2ac60e","modified":1528399072209},{"_id":"public/about/index.html","hash":"eb0758cb84fc4175c496490049fa3193bd21a1a0","modified":1528399072210},{"_id":"public/2018/06/07/python/grammar-1/index.html","hash":"05fca5050aad91b64a0482485364c70a88bc3c26","modified":1528399072210},{"_id":"public/2018/06/06/hello-world/index.html","hash":"383a6b642ecb9caaeb9bbf4578c8c23b47023c10","modified":1528399072210},{"_id":"public/categories/其他/index.html","hash":"ed0b542547768f2f4eedee0ae856671c72379cc1","modified":1528399072210},{"_id":"public/categories/Python/index.html","hash":"13b34a86d65ec20df5c8ebefa3dc27b67b032b14","modified":1528399072210},{"_id":"public/archives/index.html","hash":"3cefa398e4e2b59e1eed603363f7093c474d7bab","modified":1528399072210},{"_id":"public/archives/2018/index.html","hash":"a02014fd5923c44587aa839feefb63475efd3f8e","modified":1528399072210},{"_id":"public/archives/2018/06/index.html","hash":"9ee3279942b6707477bb86f04ccac8e3ba3cf8a0","modified":1528399072210},{"_id":"public/tags/Python/index.html","hash":"7b9fa3540faf228764979524aeeec47b97804006","modified":1528399072211},{"_id":"public/tags/Hello-World/index.html","hash":"bad61890e6ebf6c814f92ca458c09c47c41bad27","modified":1528399072210},{"_id":"public/index.html","hash":"254ef91f66a9a034f0feb988cd49de7703d6e9b5","modified":1528440172778},{"_id":"public/images/Personal/Blog.png","hash":"77dd6fa2321cc576353561c4056bceba93934d34","modified":1528383938020},{"_id":"public/images/Personal/Logo.png","hash":"480e52bc57ff54a8e417bc5f3522193c7fff3b30","modified":1528383938020},{"_id":"public/images/a.PNG","hash":"0dbf4db974bfdd8ad1448f5520eda493a5a39b14","modified":1528383938020},{"_id":"public/images/python/Python-thumbnail.png","hash":"2289e0a3a59b90b39b7514f84fc45b5fb6346b99","modified":1528383938020},{"_id":"public/images/python/Python-banner.png","hash":"045dc09806f92c878fba8a763cd70f5f5cbbc888","modified":1528383938020},{"_id":"public/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1528383938020},{"_id":"public/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1528383938020},{"_id":"public/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1528383938020},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.woff2","hash":"0ec12ea1707f5bc812b627f41cccad2aff01e54b","modified":1528383938020},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.woff2","hash":"1ba4dd60af529d1a72d0e57467c3bc0bbb728a4d","modified":1528383938020},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.woff","hash":"7b4a63abc8476f745f09775d7465f0a6c33daf85","modified":1528383938020},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1528383938020},{"_id":"public/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1528383938020},{"_id":"public/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1528383938020},{"_id":"public/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1528383938020},{"_id":"public/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1528383938020},{"_id":"public/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1528383938020},{"_id":"public/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1528383938020},{"_id":"public/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1528383938020},{"_id":"public/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1528383938021},{"_id":"public/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1528383938021},{"_id":"public/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1528383938021},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1528383938022},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1528383938022},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1528383938022},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1528383938022},{"_id":"public/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1528383938022},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1528383938022},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1528383938022},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.ttf","hash":"9b4bb228d5b132e69ff8b6b248262449879eff3e","modified":1528383938456},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.woff","hash":"8b5cac7fbf1712c81d9cac19cda04e6a604eb9da","modified":1528383938456},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.eot","hash":"d92c68223732a10ceffe54eecbe4ef70073e6dea","modified":1528383938457},{"_id":"public/js/main.js","hash":"2c148f06c5799b5d7dd165c5162e780535e07a40","modified":1528383938463},{"_id":"public/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1528383938463},{"_id":"public/libs/font-awesome5/css/fa-brands.css","hash":"3dc468f3a5d6dcbdb977b17c2c021f751c5bf7c6","modified":1528383938464},{"_id":"public/libs/font-awesome5/css/fa-solid.min.css","hash":"ac3cc27cd41d44ed5d680541636604d0c397e5f6","modified":1528383938464},{"_id":"public/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1528383938464},{"_id":"public/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1528383938464},{"_id":"public/libs/font-awesome5/css/fa-brands.min.css","hash":"ae33d7d508d9fb4d8cc026f74007fae27017fc80","modified":1528383938464},{"_id":"public/libs/font-awesome5/css/fa-solid.css","hash":"5c960e4efb31a88b1319dcf63d4806175e3cb8cd","modified":1528383938465},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1528383938465},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1528383938465},{"_id":"public/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1528383938465},{"_id":"public/css/style.css","hash":"190eaefbd5af7c855cbd45ce8f58c2152d2de6ff","modified":1528383938465},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.eot","hash":"69aa0b829fd8562d0fb72948ce49ef201ff0ee83","modified":1528383938466},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.ttf","hash":"31dc9b748b8d2bf6c3edec919e763791e037bbff","modified":1528383938466},{"_id":"public/js/insight.js","hash":"f507ab7b2236349719f1af2c918f2f5c22d410c2","modified":1528383938481},{"_id":"public/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1528383938482},{"_id":"public/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1528383938482},{"_id":"public/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1528383938482},{"_id":"public/images/wall.jpg","hash":"07a72bc6a585f203981e86325e8d313b74f14255","modified":1528383938482},{"_id":"public/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1528383938488},{"_id":"public/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1528383938488},{"_id":"public/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1528383938489},{"_id":"public/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1528383938489},{"_id":"public/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1528383938489},{"_id":"public/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1528383938491},{"_id":"public/libs/font-awesome5/css/fontawesome.min.css","hash":"8518d72f88b376749244da2bdc96f261d9bd5645","modified":1528383938495},{"_id":"public/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1528383938495},{"_id":"public/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1528383938497},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.svg","hash":"24a7c19c323e91705be51641e87da7d5dfea5d10","modified":1528383938497},{"_id":"public/libs/font-awesome5/css/fontawesome.css","hash":"b818fea784ea93c6cc393d545bfc5e1ec2045ff7","modified":1528383938499},{"_id":"public/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1528383938499},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.svg","hash":"b07d27980b351d78f322260386450dde60d298cc","modified":1528383938501},{"_id":"public/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1528383938504},{"_id":"source/_posts/python/grammar-2.md","hash":"d0de7615c7b91f3e762980249c1359a80ebf7865","modified":1528396286979},{"_id":"public/2018/06/08/python/grammar-2/index.html","hash":"26e99b0fd8810e3312b988f19b9b718bb4cd00e2","modified":1528399072210},{"_id":"source/_posts/python/grammar-3.md","hash":"ad36f487ee7c9ec27259b0e5c24d9d5f450c28ef","modified":1528440165754},{"_id":"public/2018/06/08/python/grammar-3/index.html","hash":"161929ce3a4fb745fdd60d0a88ff752eb8d0d9f2","modified":1528440172778}],"Category":[{"name":"其他","_id":"cji4oc1ty0003icva3gjxmpjh"},{"name":"Python","_id":"cji4oc1vq0009icvajkyf2zlv"}],"Data":[],"Page":[{"title":"关于","date":"2018-06-06T19:10:20.000Z","_content":"\n谨以此页纪念消失在我硬盘里的两年的笔记。\n\n这不是一个单纯的技术博客，同时，也有文学。\n\n行文仓促，难以多次复查，难免会有错漏之处，希望各位读者能给予指正。\n我的邮箱是 `zero-67@hotmail.com`。如若收到，我必会尽快答复并及时修改。\n\n本博客采用的是 [hexo](https://hexo.io) 生成，主题源自 [icarus](https://github.com/ppoffice/hexo-theme-icarus)。感谢这些开源作者！","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2018-06-07 03:10:20\n---\n\n谨以此页纪念消失在我硬盘里的两年的笔记。\n\n这不是一个单纯的技术博客，同时，也有文学。\n\n行文仓促，难以多次复查，难免会有错漏之处，希望各位读者能给予指正。\n我的邮箱是 `zero-67@hotmail.com`。如若收到，我必会尽快答复并及时修改。\n\n本博客采用的是 [hexo](https://hexo.io) 生成，主题源自 [icarus](https://github.com/ppoffice/hexo-theme-icarus)。感谢这些开源作者！","updated":"2018-06-06T19:59:15.776Z","path":"about/index.html","comments":1,"layout":"page","_id":"cji4oc1tr0000icva0x0wr2b5","content":"<p>谨以此页纪念消失在我硬盘里的两年的笔记。</p>\n<p>这不是一个单纯的技术博客，同时，也有文学。</p>\n<p>行文仓促，难以多次复查，难免会有错漏之处，希望各位读者能给予指正。<br>我的邮箱是 <a href=\"mailto:`zero-67@hotmail.com\" target=\"_blank\" rel=\"noopener\">`zero-67@hotmail.com</a>`。如若收到，我必会尽快答复并及时修改。</p>\n<p>本博客采用的是 <a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a> 生成，主题源自 <a href=\"https://github.com/ppoffice/hexo-theme-icarus\" target=\"_blank\" rel=\"noopener\">icarus</a>。感谢这些开源作者！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>谨以此页纪念消失在我硬盘里的两年的笔记。</p>\n<p>这不是一个单纯的技术博客，同时，也有文学。</p>\n<p>行文仓促，难以多次复查，难免会有错漏之处，希望各位读者能给予指正。<br>我的邮箱是 <a href=\"mailto:`zero-67@hotmail.com\" target=\"_blank\" rel=\"noopener\">`zero-67@hotmail.com</a>`。如若收到，我必会尽快答复并及时修改。</p>\n<p>本博客采用的是 <a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a> 生成，主题源自 <a href=\"https://github.com/ppoffice/hexo-theme-icarus\" target=\"_blank\" rel=\"noopener\">icarus</a>。感谢这些开源作者！</p>\n"},{"title":"Tags","layout":"tags","_content":"","source":"tags/index.md","raw":"title: \"Tags\"\nlayout: \"tags\"\n---\n","date":"2018-06-06T05:33:30.768Z","updated":"2018-06-06T05:33:30.768Z","path":"tags/index.html","comments":1,"_id":"cji4oc1tx0002icvai0lspdpa","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2018-06-06T19:00:25.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-06-07 03:00:25\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2018-06-06T19:48:36.319Z","path":"categories/index.html","comments":1,"_id":"cji4oc1u00005icvaxedcwy2z","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","date":"2018-06-05T18:25:56.829Z","toc":true,"thumbnail":"/images/wall.jpg","banner":"/images/wall.jpg","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### More Try\n\n``` c++\nprotected class A : public C{\npublic:\n    int X() {\n        return x;\n    }\nprivate:\n    int x;\n}\n```\n\n中文\n---\n\n__加粗__\n\n\n分割\n\n---\n\n`重点`\n\n表格1|表个\n:---:|:---:\n可|dadaa\nsdaa|ddddd\n\n$$\nF_x = a^2 + b^2\n$$","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2018年6月6日 02:47:21\ncategories: 其他\ntags: \n    - Hello World\ntoc: true\nthumbnail: /images/wall.jpg\nbanner: /images/wall.jpg\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### More Try\n\n``` c++\nprotected class A : public C{\npublic:\n    int X() {\n        return x;\n    }\nprivate:\n    int x;\n}\n```\n\n中文\n---\n\n__加粗__\n\n\n分割\n\n---\n\n`重点`\n\n表格1|表个\n:---:|:---:\n可|dadaa\nsdaa|ddddd\n\n$$\nF_x = a^2 + b^2\n$$","slug":"hello-world","published":1,"updated":"2018-06-07T14:26:34.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji4oc1tt0001icvaqwnu9a33","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h3 id=\"More-Try\"><a href=\"#More-Try\" class=\"headerlink\" title=\"More Try\"></a>More Try</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> :</span> <span class=\"keyword\">public</span> C&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">X</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"中文\"><a href=\"#中文\" class=\"headerlink\" title=\"中文\"></a>中文</h2><p><strong>加粗</strong></p>\n<p>分割</p>\n<hr>\n<p><code>重点</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">表格1</th>\n<th style=\"text-align:center\">表个</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">可</td>\n<td style=\"text-align:center\">dadaa</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sdaa</td>\n<td style=\"text-align:center\">ddddd</td>\n</tr>\n</tbody>\n</table>\n<p>$$<br>F_x = a^2 + b^2<br>$$</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h3 id=\"More-Try\"><a href=\"#More-Try\" class=\"headerlink\" title=\"More Try\"></a>More Try</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> :</span> <span class=\"keyword\">public</span> C&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">X</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"中文\"><a href=\"#中文\" class=\"headerlink\" title=\"中文\"></a>中文</h2><p><strong>加粗</strong></p>\n<p>分割</p>\n<hr>\n<p><code>重点</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">表格1</th>\n<th style=\"text-align:center\">表个</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">可</td>\n<td style=\"text-align:center\">dadaa</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sdaa</td>\n<td style=\"text-align:center\">ddddd</td>\n</tr>\n</tbody>\n</table>\n<p>$$<br>F_x = a^2 + b^2<br>$$</p>\n"},{"title":"Python3 学习之路(1) 初识","date":"2018-06-07T14:35:35.766Z","toc":true,"thumbnail":"/images/python/Python-thumbnail.png","banner":"/images/python/Python-banner.png","_content":"\n# Python 简介\n\nPython 是一种解释型[^1]、交互性、面向对象[^2]语言。\n\nPython 由 Guido van Rossum 在 1989 年圣诞节期间编写。\n\n## Python 设计之禅(The Zen of Python)\n\n*   Beautiful is better than ugly.\n    美丽胜于丑陋\n*   Explicit is better than implicit.\n    显式胜过隐式\n*   Simple is better than complex.\n    简单优于复杂\n*   Complex is better than complicated.\n    复杂好于超复杂\n*   Flat is better than nested.\n    单一胜过于嵌套\n*   Sparse is better than dense.\n    间隔胜于紧凑\n*   Readability counts.\n    可读性很重要\n*   Special cases aren’t special enough to break the rules.\n    特殊的情况并不足以特殊到打破规则\n*   Although practicality beats purity.\n    尽管实用性打击代码的纯洁\n*   Errors should never pass silently.\n    错误绝不应该被默默地放过\n*   Unless explicitly silenced.\n    除非你有意为之\n*   In the face of ambiguity, refuse the temptation to guess. \n    面对含糊不清的地方，忍住去猜想的冲动 \n*   There should be one – and preferably only one – obvious way to do it. \n    这里应该有一种（最好只有一种）明确的方法来了解它 \n*   Although that way may not be obvious at first unless you’re Dutch \n    除非你是Dutch, 在一开始它可能并不是那么明显 \n*   Now is better than never. \n    现在开始做总比最远不做的好 \n*   Although never is often better than right now. \n    不加思考就做还不如不做 \n*   If the implementation is hard to explain, it is a bad idea. \n    如果某个实现很难解释清楚，那一定是个糟糕的想法 \n*   If the implementation is easy to explain, it may be a good idea. \n    如果某个实现很好解释，这也许是个好的想法。 \n*   Namespaces are one honking great idea – let’s do more of those! \n    命名空间是个绝妙的想法，我们应该多用，多多益善！\n\n## Python 应用范围\n\n* 网络应用，包括网站、后台服务\n* 许多日常需要的小工具，包括系统管理员需要的脚本任务\n* 深度学习\n* 人工智能\n\n# Windows10 下安装配置\n\n到 [Python 官方网站](https://www.python.org/) 下载对应版本，现在我的版本是 __Python V3.6.5 for windows__。\n\n安装过程没有什么好说的，但是可以选择自动配置PATH，不然需要在后面手动进行配置。\n\n\n| 变量名 | 描述 |\n|:---:|:---:|\n| PATH | 系统维护的可用的命令行解释器和其他程序的信息，应添加\"(Python安装目录)\\\\Scripts\\\\\" 和 \"(Python安装目录)\\\\\" |\n| PYTHONPATH | PYTHONPATH是Python搜索路径，默认我们import的模块都会从PYTHONPATH里面寻找。 |\n| PYTHONSTARTUP | Python启动后，先寻找PYTHONSTARTUP环境变量，然后执行此变量指定的文件中的代码。 |\n| PYTHONCASEOK | 加入PYTHONCASEOK的环境变量, 就会使python导入模块的时候不区分大小写. |\n| PYTHONHOME | 另一种模块搜索路径。它通常内嵌于的PYTHONSTARTUP或PYTHONPATH目录中，使得两个模块库更容易切换。 |\n\n__安装完__，启动命令提示符，在任意目录下输入 `python` ，进入Python的交互式解释器，显示Python的版本，此时说明安装成功。\n\n接下来，python的语法，我将用 [IntelliJ IDEA](https://www.jetbrains.com/idea/)，加 Python 的拓展插件来实践。\n\n# Python解释器\n\n当我们编写Python代码时，我们得到的是一个包含Python代码的以.py为扩展名的文本文件。要运行代码，就需要Python解释器去执行.py文件。\n\n由于整个Python语言从规范到解释器都是开源的，所以理论上，只要水平够高，任何人都可以编写Python解释器来执行Python代码（当然难度很大）。事实上，确实存在多种Python解释器。\n\n- CPython\n当我们从Python官方网站下载并安装好Python 3.x后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。在命令行下运行python就是启动CPython解释器。\nCPython是使用最广的Python解释器。教程的所有代码也都在CPython下执行。\n- IPython\nIPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。好比很多国产浏览器虽然外观不同，但内核其实都是调用了IE。\nCPython用>>>作为提示符，而IPython用In [序号]:作为提示符。\n- PyPy\nPyPy是另一个Python解释器，它的目标是执行速度。PyPy采用JIT技术，对Python代码进行动态编译（注意不是解释），所以可以显著提高Python代码的执行速度。\n绝大部分Python代码都可以在PyPy下运行，但是PyPy和CPython有一些是不同的，这就导致相同的Python代码在两种解释器下执行可能会有不同的结果。如果你的代码要放到PyPy下执行，就需要了解PyPy和CPython的不同点。\n- Jython\nJython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。\n- IronPython\nIronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，可以直接把Python代码编译成.Net的字节码。\n\n>小结\nPython的解释器很多，但使用最广泛的还是CPython。如果要和Java或.Net平台交互，最好的办法不是用Jython或IronPython，而是通过网络调用来交互，确保各程序之间的独立性。\n本教程的所有代码只确保在CPython 3.x版本下运行。请务必在本地安装CPython（也就是从Python官方网站下载的安装程序）。\n\n---\n\n# 引用\n\n1. http://www.runoob.com/python/python-intro.html\n2. http://www.runoob.com/python/python-install.html\n3. https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143161198846783e33de56d4041058c3dfc7e44ee1203000\n4. https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431608990315a01b575e2ab041168ff0df194698afac000\n\n\n[^1]:运行效率较低，不适合运算密集型的部分。\n[^2]:当然可以只编写面向过程的部分。","source":"_posts/python/grammar-1.md","raw":"---\ntitle: Python3 学习之路(1) 初识\ndate: 2018年6月7日 22:36:33\ncategories: Python\ntags: \n    - Python\ntoc: true\nthumbnail: /images/python/Python-thumbnail.png\nbanner: /images/python/Python-banner.png\n---\n\n# Python 简介\n\nPython 是一种解释型[^1]、交互性、面向对象[^2]语言。\n\nPython 由 Guido van Rossum 在 1989 年圣诞节期间编写。\n\n## Python 设计之禅(The Zen of Python)\n\n*   Beautiful is better than ugly.\n    美丽胜于丑陋\n*   Explicit is better than implicit.\n    显式胜过隐式\n*   Simple is better than complex.\n    简单优于复杂\n*   Complex is better than complicated.\n    复杂好于超复杂\n*   Flat is better than nested.\n    单一胜过于嵌套\n*   Sparse is better than dense.\n    间隔胜于紧凑\n*   Readability counts.\n    可读性很重要\n*   Special cases aren’t special enough to break the rules.\n    特殊的情况并不足以特殊到打破规则\n*   Although practicality beats purity.\n    尽管实用性打击代码的纯洁\n*   Errors should never pass silently.\n    错误绝不应该被默默地放过\n*   Unless explicitly silenced.\n    除非你有意为之\n*   In the face of ambiguity, refuse the temptation to guess. \n    面对含糊不清的地方，忍住去猜想的冲动 \n*   There should be one – and preferably only one – obvious way to do it. \n    这里应该有一种（最好只有一种）明确的方法来了解它 \n*   Although that way may not be obvious at first unless you’re Dutch \n    除非你是Dutch, 在一开始它可能并不是那么明显 \n*   Now is better than never. \n    现在开始做总比最远不做的好 \n*   Although never is often better than right now. \n    不加思考就做还不如不做 \n*   If the implementation is hard to explain, it is a bad idea. \n    如果某个实现很难解释清楚，那一定是个糟糕的想法 \n*   If the implementation is easy to explain, it may be a good idea. \n    如果某个实现很好解释，这也许是个好的想法。 \n*   Namespaces are one honking great idea – let’s do more of those! \n    命名空间是个绝妙的想法，我们应该多用，多多益善！\n\n## Python 应用范围\n\n* 网络应用，包括网站、后台服务\n* 许多日常需要的小工具，包括系统管理员需要的脚本任务\n* 深度学习\n* 人工智能\n\n# Windows10 下安装配置\n\n到 [Python 官方网站](https://www.python.org/) 下载对应版本，现在我的版本是 __Python V3.6.5 for windows__。\n\n安装过程没有什么好说的，但是可以选择自动配置PATH，不然需要在后面手动进行配置。\n\n\n| 变量名 | 描述 |\n|:---:|:---:|\n| PATH | 系统维护的可用的命令行解释器和其他程序的信息，应添加\"(Python安装目录)\\\\Scripts\\\\\" 和 \"(Python安装目录)\\\\\" |\n| PYTHONPATH | PYTHONPATH是Python搜索路径，默认我们import的模块都会从PYTHONPATH里面寻找。 |\n| PYTHONSTARTUP | Python启动后，先寻找PYTHONSTARTUP环境变量，然后执行此变量指定的文件中的代码。 |\n| PYTHONCASEOK | 加入PYTHONCASEOK的环境变量, 就会使python导入模块的时候不区分大小写. |\n| PYTHONHOME | 另一种模块搜索路径。它通常内嵌于的PYTHONSTARTUP或PYTHONPATH目录中，使得两个模块库更容易切换。 |\n\n__安装完__，启动命令提示符，在任意目录下输入 `python` ，进入Python的交互式解释器，显示Python的版本，此时说明安装成功。\n\n接下来，python的语法，我将用 [IntelliJ IDEA](https://www.jetbrains.com/idea/)，加 Python 的拓展插件来实践。\n\n# Python解释器\n\n当我们编写Python代码时，我们得到的是一个包含Python代码的以.py为扩展名的文本文件。要运行代码，就需要Python解释器去执行.py文件。\n\n由于整个Python语言从规范到解释器都是开源的，所以理论上，只要水平够高，任何人都可以编写Python解释器来执行Python代码（当然难度很大）。事实上，确实存在多种Python解释器。\n\n- CPython\n当我们从Python官方网站下载并安装好Python 3.x后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。在命令行下运行python就是启动CPython解释器。\nCPython是使用最广的Python解释器。教程的所有代码也都在CPython下执行。\n- IPython\nIPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。好比很多国产浏览器虽然外观不同，但内核其实都是调用了IE。\nCPython用>>>作为提示符，而IPython用In [序号]:作为提示符。\n- PyPy\nPyPy是另一个Python解释器，它的目标是执行速度。PyPy采用JIT技术，对Python代码进行动态编译（注意不是解释），所以可以显著提高Python代码的执行速度。\n绝大部分Python代码都可以在PyPy下运行，但是PyPy和CPython有一些是不同的，这就导致相同的Python代码在两种解释器下执行可能会有不同的结果。如果你的代码要放到PyPy下执行，就需要了解PyPy和CPython的不同点。\n- Jython\nJython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。\n- IronPython\nIronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，可以直接把Python代码编译成.Net的字节码。\n\n>小结\nPython的解释器很多，但使用最广泛的还是CPython。如果要和Java或.Net平台交互，最好的办法不是用Jython或IronPython，而是通过网络调用来交互，确保各程序之间的独立性。\n本教程的所有代码只确保在CPython 3.x版本下运行。请务必在本地安装CPython（也就是从Python官方网站下载的安装程序）。\n\n---\n\n# 引用\n\n1. http://www.runoob.com/python/python-intro.html\n2. http://www.runoob.com/python/python-install.html\n3. https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143161198846783e33de56d4041058c3dfc7e44ee1203000\n4. https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431608990315a01b575e2ab041168ff0df194698afac000\n\n\n[^1]:运行效率较低，不适合运算密集型的部分。\n[^2]:当然可以只编写面向过程的部分。","slug":"python/grammar-1","published":1,"updated":"2018-06-07T17:44:01.590Z","_id":"cji4oc1vn0008icva4dt4brft","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Python-简介\"><a href=\"#Python-简介\" class=\"headerlink\" title=\"Python 简介\"></a>Python 简介</h1><p>Python 是一种解释型<sup id=\"fnref:1\"><a href=\"#fn:1\" rel=\"footnote\">1</a></sup>、交互性、面向对象<sup id=\"fnref:2\"><a href=\"#fn:2\" rel=\"footnote\">2</a></sup>语言。</p>\n<p>Python 由 Guido van Rossum 在 1989 年圣诞节期间编写。</p>\n<h2 id=\"Python-设计之禅-The-Zen-of-Python\"><a href=\"#Python-设计之禅-The-Zen-of-Python\" class=\"headerlink\" title=\"Python 设计之禅(The Zen of Python)\"></a>Python 设计之禅(The Zen of Python)</h2><ul>\n<li>Beautiful is better than ugly.<br>美丽胜于丑陋</li>\n<li>Explicit is better than implicit.<br>显式胜过隐式</li>\n<li>Simple is better than complex.<br>简单优于复杂</li>\n<li>Complex is better than complicated.<br>复杂好于超复杂</li>\n<li>Flat is better than nested.<br>单一胜过于嵌套</li>\n<li>Sparse is better than dense.<br>间隔胜于紧凑</li>\n<li>Readability counts.<br>可读性很重要</li>\n<li>Special cases aren’t special enough to break the rules.<br>特殊的情况并不足以特殊到打破规则</li>\n<li>Although practicality beats purity.<br>尽管实用性打击代码的纯洁</li>\n<li>Errors should never pass silently.<br>错误绝不应该被默默地放过</li>\n<li>Unless explicitly silenced.<br>除非你有意为之</li>\n<li>In the face of ambiguity, refuse the temptation to guess.<br>面对含糊不清的地方，忍住去猜想的冲动 </li>\n<li>There should be one – and preferably only one – obvious way to do it.<br>这里应该有一种（最好只有一种）明确的方法来了解它 </li>\n<li>Although that way may not be obvious at first unless you’re Dutch<br>除非你是Dutch, 在一开始它可能并不是那么明显 </li>\n<li>Now is better than never.<br>现在开始做总比最远不做的好 </li>\n<li>Although never is often better than right now.<br>不加思考就做还不如不做 </li>\n<li>If the implementation is hard to explain, it is a bad idea.<br>如果某个实现很难解释清楚，那一定是个糟糕的想法 </li>\n<li>If the implementation is easy to explain, it may be a good idea.<br>如果某个实现很好解释，这也许是个好的想法。 </li>\n<li>Namespaces are one honking great idea – let’s do more of those!<br>命名空间是个绝妙的想法，我们应该多用，多多益善！</li>\n</ul>\n<h2 id=\"Python-应用范围\"><a href=\"#Python-应用范围\" class=\"headerlink\" title=\"Python 应用范围\"></a>Python 应用范围</h2><ul>\n<li>网络应用，包括网站、后台服务</li>\n<li>许多日常需要的小工具，包括系统管理员需要的脚本任务</li>\n<li>深度学习</li>\n<li>人工智能</li>\n</ul>\n<h1 id=\"Windows10-下安装配置\"><a href=\"#Windows10-下安装配置\" class=\"headerlink\" title=\"Windows10 下安装配置\"></a>Windows10 下安装配置</h1><p>到 <a href=\"https://www.python.org/\" target=\"_blank\" rel=\"noopener\">Python 官方网站</a> 下载对应版本，现在我的版本是 <strong>Python V3.6.5 for windows</strong>。</p>\n<p>安装过程没有什么好说的，但是可以选择自动配置PATH，不然需要在后面手动进行配置。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量名</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">PATH</td>\n<td style=\"text-align:center\">系统维护的可用的命令行解释器和其他程序的信息，应添加”(Python安装目录)\\Scripts\\“ 和 “(Python安装目录)\\“</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PYTHONPATH</td>\n<td style=\"text-align:center\">PYTHONPATH是Python搜索路径，默认我们import的模块都会从PYTHONPATH里面寻找。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PYTHONSTARTUP</td>\n<td style=\"text-align:center\">Python启动后，先寻找PYTHONSTARTUP环境变量，然后执行此变量指定的文件中的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PYTHONCASEOK</td>\n<td style=\"text-align:center\">加入PYTHONCASEOK的环境变量, 就会使python导入模块的时候不区分大小写.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PYTHONHOME</td>\n<td style=\"text-align:center\">另一种模块搜索路径。它通常内嵌于的PYTHONSTARTUP或PYTHONPATH目录中，使得两个模块库更容易切换。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>安装完</strong>，启动命令提示符，在任意目录下输入 <code>python</code> ，进入Python的交互式解释器，显示Python的版本，此时说明安装成功。</p>\n<p>接下来，python的语法，我将用 <a href=\"https://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"noopener\">IntelliJ IDEA</a>，加 Python 的拓展插件来实践。</p>\n<h1 id=\"Python解释器\"><a href=\"#Python解释器\" class=\"headerlink\" title=\"Python解释器\"></a>Python解释器</h1><p>当我们编写Python代码时，我们得到的是一个包含Python代码的以.py为扩展名的文本文件。要运行代码，就需要Python解释器去执行.py文件。</p>\n<p>由于整个Python语言从规范到解释器都是开源的，所以理论上，只要水平够高，任何人都可以编写Python解释器来执行Python代码（当然难度很大）。事实上，确实存在多种Python解释器。</p>\n<ul>\n<li>CPython<br>当我们从Python官方网站下载并安装好Python 3.x后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。在命令行下运行python就是启动CPython解释器。<br>CPython是使用最广的Python解释器。教程的所有代码也都在CPython下执行。</li>\n<li>IPython<br>IPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。好比很多国产浏览器虽然外观不同，但内核其实都是调用了IE。<br>CPython用&gt;&gt;&gt;作为提示符，而IPython用In [序号]:作为提示符。</li>\n<li>PyPy<br>PyPy是另一个Python解释器，它的目标是执行速度。PyPy采用JIT技术，对Python代码进行动态编译（注意不是解释），所以可以显著提高Python代码的执行速度。<br>绝大部分Python代码都可以在PyPy下运行，但是PyPy和CPython有一些是不同的，这就导致相同的Python代码在两种解释器下执行可能会有不同的结果。如果你的代码要放到PyPy下执行，就需要了解PyPy和CPython的不同点。</li>\n<li>Jython<br>Jython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。</li>\n<li>IronPython<br>IronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，可以直接把Python代码编译成.Net的字节码。</li>\n</ul>\n<blockquote>\n<p>小结<br>Python的解释器很多，但使用最广泛的还是CPython。如果要和Java或.Net平台交互，最好的办法不是用Jython或IronPython，而是通过网络调用来交互，确保各程序之间的独立性。<br>本教程的所有代码只确保在CPython 3.x版本下运行。请务必在本地安装CPython（也就是从Python官方网站下载的安装程序）。</p>\n</blockquote>\n<hr>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ol>\n<li><a href=\"http://www.runoob.com/python/python-intro.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/python/python-intro.html</a></li>\n<li><a href=\"http://www.runoob.com/python/python-install.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/python/python-install.html</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143161198846783e33de56d4041058c3dfc7e44ee1203000\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143161198846783e33de56d4041058c3dfc7e44ee1203000</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431608990315a01b575e2ab041168ff0df194698afac000\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431608990315a01b575e2ab041168ff0df194698afac000</a></li>\n</ol>\n<div id=\"footnotes\"><hr><div id=\"footnotelist\"><ol style=\"list-style:none; padding-left: 0;\"><li id=\"fn:1\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px;\">1.</span><span style=\"display: inline-block; vertical-align: top;\">运行效率较低，不适合运算密集型的部分。</span><a href=\"#fnref:1\" rev=\"footnote\"> ↩</a></li><li id=\"fn:2\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px;\">2.</span><span style=\"display: inline-block; vertical-align: top;\">当然可以只编写面向过程的部分。</span><a href=\"#fnref:2\" rev=\"footnote\"> ↩</a></li></ol></div></div>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Python-简介\"><a href=\"#Python-简介\" class=\"headerlink\" title=\"Python 简介\"></a>Python 简介</h1><p>Python 是一种解释型<sup id=\"fnref:1\"><a href=\"#fn:1\" rel=\"footnote\">1</a></sup>、交互性、面向对象<sup id=\"fnref:2\"><a href=\"#fn:2\" rel=\"footnote\">2</a></sup>语言。</p>\n<p>Python 由 Guido van Rossum 在 1989 年圣诞节期间编写。</p>\n<h2 id=\"Python-设计之禅-The-Zen-of-Python\"><a href=\"#Python-设计之禅-The-Zen-of-Python\" class=\"headerlink\" title=\"Python 设计之禅(The Zen of Python)\"></a>Python 设计之禅(The Zen of Python)</h2><ul>\n<li>Beautiful is better than ugly.<br>美丽胜于丑陋</li>\n<li>Explicit is better than implicit.<br>显式胜过隐式</li>\n<li>Simple is better than complex.<br>简单优于复杂</li>\n<li>Complex is better than complicated.<br>复杂好于超复杂</li>\n<li>Flat is better than nested.<br>单一胜过于嵌套</li>\n<li>Sparse is better than dense.<br>间隔胜于紧凑</li>\n<li>Readability counts.<br>可读性很重要</li>\n<li>Special cases aren’t special enough to break the rules.<br>特殊的情况并不足以特殊到打破规则</li>\n<li>Although practicality beats purity.<br>尽管实用性打击代码的纯洁</li>\n<li>Errors should never pass silently.<br>错误绝不应该被默默地放过</li>\n<li>Unless explicitly silenced.<br>除非你有意为之</li>\n<li>In the face of ambiguity, refuse the temptation to guess.<br>面对含糊不清的地方，忍住去猜想的冲动 </li>\n<li>There should be one – and preferably only one – obvious way to do it.<br>这里应该有一种（最好只有一种）明确的方法来了解它 </li>\n<li>Although that way may not be obvious at first unless you’re Dutch<br>除非你是Dutch, 在一开始它可能并不是那么明显 </li>\n<li>Now is better than never.<br>现在开始做总比最远不做的好 </li>\n<li>Although never is often better than right now.<br>不加思考就做还不如不做 </li>\n<li>If the implementation is hard to explain, it is a bad idea.<br>如果某个实现很难解释清楚，那一定是个糟糕的想法 </li>\n<li>If the implementation is easy to explain, it may be a good idea.<br>如果某个实现很好解释，这也许是个好的想法。 </li>\n<li>Namespaces are one honking great idea – let’s do more of those!<br>命名空间是个绝妙的想法，我们应该多用，多多益善！</li>\n</ul>\n<h2 id=\"Python-应用范围\"><a href=\"#Python-应用范围\" class=\"headerlink\" title=\"Python 应用范围\"></a>Python 应用范围</h2><ul>\n<li>网络应用，包括网站、后台服务</li>\n<li>许多日常需要的小工具，包括系统管理员需要的脚本任务</li>\n<li>深度学习</li>\n<li>人工智能</li>\n</ul>\n<h1 id=\"Windows10-下安装配置\"><a href=\"#Windows10-下安装配置\" class=\"headerlink\" title=\"Windows10 下安装配置\"></a>Windows10 下安装配置</h1><p>到 <a href=\"https://www.python.org/\" target=\"_blank\" rel=\"noopener\">Python 官方网站</a> 下载对应版本，现在我的版本是 <strong>Python V3.6.5 for windows</strong>。</p>\n<p>安装过程没有什么好说的，但是可以选择自动配置PATH，不然需要在后面手动进行配置。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量名</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">PATH</td>\n<td style=\"text-align:center\">系统维护的可用的命令行解释器和其他程序的信息，应添加”(Python安装目录)\\Scripts\\“ 和 “(Python安装目录)\\“</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PYTHONPATH</td>\n<td style=\"text-align:center\">PYTHONPATH是Python搜索路径，默认我们import的模块都会从PYTHONPATH里面寻找。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PYTHONSTARTUP</td>\n<td style=\"text-align:center\">Python启动后，先寻找PYTHONSTARTUP环境变量，然后执行此变量指定的文件中的代码。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PYTHONCASEOK</td>\n<td style=\"text-align:center\">加入PYTHONCASEOK的环境变量, 就会使python导入模块的时候不区分大小写.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PYTHONHOME</td>\n<td style=\"text-align:center\">另一种模块搜索路径。它通常内嵌于的PYTHONSTARTUP或PYTHONPATH目录中，使得两个模块库更容易切换。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>安装完</strong>，启动命令提示符，在任意目录下输入 <code>python</code> ，进入Python的交互式解释器，显示Python的版本，此时说明安装成功。</p>\n<p>接下来，python的语法，我将用 <a href=\"https://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"noopener\">IntelliJ IDEA</a>，加 Python 的拓展插件来实践。</p>\n<h1 id=\"Python解释器\"><a href=\"#Python解释器\" class=\"headerlink\" title=\"Python解释器\"></a>Python解释器</h1><p>当我们编写Python代码时，我们得到的是一个包含Python代码的以.py为扩展名的文本文件。要运行代码，就需要Python解释器去执行.py文件。</p>\n<p>由于整个Python语言从规范到解释器都是开源的，所以理论上，只要水平够高，任何人都可以编写Python解释器来执行Python代码（当然难度很大）。事实上，确实存在多种Python解释器。</p>\n<ul>\n<li>CPython<br>当我们从Python官方网站下载并安装好Python 3.x后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。在命令行下运行python就是启动CPython解释器。<br>CPython是使用最广的Python解释器。教程的所有代码也都在CPython下执行。</li>\n<li>IPython<br>IPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。好比很多国产浏览器虽然外观不同，但内核其实都是调用了IE。<br>CPython用&gt;&gt;&gt;作为提示符，而IPython用In [序号]:作为提示符。</li>\n<li>PyPy<br>PyPy是另一个Python解释器，它的目标是执行速度。PyPy采用JIT技术，对Python代码进行动态编译（注意不是解释），所以可以显著提高Python代码的执行速度。<br>绝大部分Python代码都可以在PyPy下运行，但是PyPy和CPython有一些是不同的，这就导致相同的Python代码在两种解释器下执行可能会有不同的结果。如果你的代码要放到PyPy下执行，就需要了解PyPy和CPython的不同点。</li>\n<li>Jython<br>Jython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。</li>\n<li>IronPython<br>IronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，可以直接把Python代码编译成.Net的字节码。</li>\n</ul>\n<blockquote>\n<p>小结<br>Python的解释器很多，但使用最广泛的还是CPython。如果要和Java或.Net平台交互，最好的办法不是用Jython或IronPython，而是通过网络调用来交互，确保各程序之间的独立性。<br>本教程的所有代码只确保在CPython 3.x版本下运行。请务必在本地安装CPython（也就是从Python官方网站下载的安装程序）。</p>\n</blockquote>\n<hr>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ol>\n<li><a href=\"http://www.runoob.com/python/python-intro.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/python/python-intro.html</a></li>\n<li><a href=\"http://www.runoob.com/python/python-install.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/python/python-install.html</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143161198846783e33de56d4041058c3dfc7e44ee1203000\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143161198846783e33de56d4041058c3dfc7e44ee1203000</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431608990315a01b575e2ab041168ff0df194698afac000\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431608990315a01b575e2ab041168ff0df194698afac000</a></li>\n</ol>\n<div id=\"footnotes\"><hr><div id=\"footnotelist\"><ol style=\"list-style:none; padding-left: 0;\"><li id=\"fn:1\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px;\">1.</span><span style=\"display: inline-block; vertical-align: top;\">运行效率较低，不适合运算密集型的部分。</span><a href=\"#fnref:1\" rev=\"footnote\"> ↩</a></li><li id=\"fn:2\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px;\">2.</span><span style=\"display: inline-block; vertical-align: top;\">当然可以只编写面向过程的部分。</span><a href=\"#fnref:2\" rev=\"footnote\"> ↩</a></li></ol></div></div>"},{"title":"Python3 学习之路(3) 变量","date":"2018-06-07T18:16:22.080Z","toc":true,"thumbnail":"/images/python/Python-thumbnail.png","banner":"/images/python/Python-banner.png","_content":"\n# 变量简述\n\nPython 中的变量赋值不需要类型声明。\n每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。\n每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。\n等号（=）用来给变量赋值。\n等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。\n\n```python\nanswer = 42 #之前看到过的简单的变量赋值\n```\n# 标准数据类型\n\n## 数字(Number)\n\n### 长整型(int)\n\n在Python3中，只有一种int代表长整型，可以参照上述进行赋值和计算。在超过类似 C/C++ 中的 int 变量时，自动的转换成一个精度无限的long类型。同时，python提供16进制0x写法，和8进制的0o写法。\n\n### 浮点数(float)\n\n浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，比如，1.23x109和12.3x108是完全相等的。浮点数可以使用平时的小数写法，也支持科学计数写法。\n\n### 布尔值(bool)\n\n布尔值和布尔代数的表示完全一致，一个布尔值只有True、False两种值，要么是True，要么是False，注意其大小写。\n布尔值可以参与数字的运算，此时True代表1，False代表0。\n\n布尔值可以用and、or和not运算，分别对于与，或，非。\n\n### 复数(complex)\n\n复数的赋值可以使用两种方法。\n\n```python\ns = 3 + 1j\nd = complex(3,2)\n```\n### 数值计算\n\npython 支持 加法、减法、乘法、除法、地板除法、取余、乘方的数值计算。在混合计算时，Python会隐式的把整型转换成为浮点数。\n\n```python\n5/2 #除法 返回一个浮点数 2.5\n5//2 #地板除法 返回一个整数 2，向0取整\n5%2 #取余 返回一个整数/浮点数，取决于两个操作数是否有浮点数\n2**5 #乘方\n```\n## 字符串(String)\n\n字符串是以单引号\\'或双引号\\\"括起来的任意文本，比如\\'abc\\'，\\\"xyz\\\"等等。请注意，\\'\\'或\\\"\\\"本身只是一种表示方式，不是字符串的一部分，因此，字符串\\'abc\\'只有a，b，c这3个字符。\n字符串可以用截取的语法，格式为：变量[头下标:尾下标]\n\n```python\nprint  (str[0:-1])  # 输出第一个到倒数第二个的所有字符  \nprint  (str[0])  # 输出字符串第一个字符  \nprint  (str[2:5])  # 输出从第三个开始到第五个的字符  \nprint  (str[2:])  # 输出从第三个开始的后的所有字符  \nprint  (str * 2)  # 输出字符串两次  \nprint  (str + \"TEST\")  # 连接字符串\n```\n注意，python里面的字符串(甚至包括其他引用类型)，是以值比较相等的，而不是像java等语言比较内存地址。故两个内存地址不同，但内容相同的字符串做相等判定，答案是True。\n\n## 列表(List)\n\n列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。\n列表是写在方括号之间、用逗号分隔开的元素列表，列表中的元素是可以改变的。\n和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。\n\n## 元组(Tuple)\n\n元组与列表类似，不同之处在于元组的元素不能修改。元组写在小括号里，元素之间用逗号隔开。\ntuple的元素不可改变，但它可以包含可变的对象，比如list列表。\n构造包含 0 个或 1 个元素的元组比较特殊，所以有一些额外的语法规则：\n\n```python\ntup1 =  ()  # 空元组\ntup2 =  (20,)  # 一个元素，需要在元素后添加逗号\n```\nstring、list和tuple都属于sequence（序列）。\n\n## 集合(Set)\n\n集合是一个无序不重复元素的序列，其基本功能是进行成员关系测试和删除重复元素。\n可以使用大括号 { } 或者 set() 函数创建集合。\n但是创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。\n\n```python\na = set('abracadabra') \nb = set('alacazam') \nprint(a) \nprint(a - b)  # a和b的差集  \nprint(a | b)  # a和b的并集  \nprint(a & b)  # a和b的交集  \nprint(a ^ b)  # a和b中不同时存在的元素\n```\n## 字典(Dictionary)\n\n字典当中的元素是通过键来存取的，而不是通过偏移存取，这是字典与序列不同的地方。\n\n字典是一种映射类型，字典用\"{ }\"标识，它是一个无序的键(key) : 值(value)对集合。\n键(key)必须使用不可变类型，在同一个字典中，键(key)必须是唯一的。\n字典可以通过中括号中加key的方法来获得value，也可以调用.keys() 或 .value() 方法来获得其中的所有键与值。\n\n## 空值(None)\n\n空值是一个特殊的值，用None表示，空值不能代表0，0也不能代表空值。\n\n# 相关函数\n\n## del var\n\n删除一些对象的引用，你可以使用del删除一个或多个的对象引用，如果要多个，用逗号隔开。\n\n```python\ndel var1,var2,var3\n```\n\n## int(x[,base])\n\n```python\nage = int(10.9) # 将x转换为int型变量，向0取整\nstatus = int('10',2) # 构造2进制下的10，即十进制下的2，注意'10'是字符串\n```\n## float(x)\n\n```\nweight = float(50) # 将x转换float型变量\n```\n\n## complex(real[,imag])\n\n```\na = complex(1) # 构造复数 1 + 0j\nb = complex(-1,5) # 构造复数 -1 ＋５ｊ\n```\n## str(x)\n\n将x转换为字符串。\n\n## repr(x)\n\n将对象转化为供解释器读取的形式，返回一个字符串。\n\n## eval(expression[, globals[, locals]])\n\n执行一个字符串表达式，并返回表达式的值。\n\n| 参数 | 含义 |\n|---|---|\n| expression | 表达式 |\n| globals | 变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。 |\n| locals | 变量作用域，局部命名空间，如果被提供，可以是任何映射对象。 |\n\n```python\neval('2 + 2') # 返回一个值为4的int类型\nn = 4\neval('n ** 2') # 返回一个值为16的int类型\neval('\"hello,\" + str(0)') # 返回一个值为'hello,0'的string类型\n```\n## tuple(s)\n\n将s转换为元组。\n\n## list(s)\n\n将s转换为列表。\n\n## dict(d)\n\n将d转换为字典。\n\n```\nsex = dict(boy='1',girl='0') #传入关键字\nweek = dict([('Mon', 0), ('Tues', 1), ('Wed', 2), \n             ('Thur', 3), ('Fri', 4), ('Sat', 5), ('Sun', 6)]) #可迭代对象方式来构造字典\n```\n## frozenset([iterable])\n\n将iterable转换为冻结的集合，冻结后集合不能再添加或删除任何元素。\niterable为可迭代的对象，比如列表、字典、元组等等。\n注意，冻结的集合中任意一个元素不能是列表，但是可以直接冻结列表(这里应该看作均为不可变的元素)。\n\n```python\ntup = (3, 5.0, \"test\", (2, 2), ([2,3],[3,3])) #元素分别为int、float、string、tuple、带有list的tuple\nlist = [321,\"test\",((2,2),(3,3))] #元素分别为int、string、带有tuple的tuple\nfrozenset(tup) # 非法操作，冻结的集合中含有带list的元素\nfrozenset(list) # 合法操作，冻结的中不含有带list的元素\n```\n## chr(x) ord(c)\n\nchr(x) 将整数x以ASCII码表转换成字符。\nord(c) 将字符c以ASCII码表转换成整数。\n\n## hex(x) oct(x)\n\nhex(x) 将整数x转换成16进制，以字符串的格式返回。\noct(x) 将整数x转换成8进制，以字符串的格式返回。\n\n## id(x)\n\n返回变量x的内存地址。\n\n## type(var)\n\n查询变量所指的对象类型。\n\n## isinstance(var, type)\n\n判定查询变量所指的对象类型是不是type，若是则返回True，否则返回False。\n\n```python\nn = 3\nif isinstance(n, int) :\n   print(\"n's type is int)\n```\ntype()与isinstance()的区别在面向对象时可以区分出来。\n若有A类，且B类继承了A类。\n则，type()认为A与B是两种不同的数据类型。\n而，isinstance()认为B类的对象也是一种A类的对象，他们同属于一种数据类型。\n\n---\n\n# 引用\n\n1. http://www.runoob.com/python3/python3-data-type.html\n2. https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000\n","source":"_posts/python/grammar-3.md","raw":"---\ntitle: Python3 学习之路(3) 变量\ndate: 2018年6月8日 02:17:36\ncategories: Python\ntags: \n    - Python\ntoc: true\nthumbnail: /images/python/Python-thumbnail.png\nbanner: /images/python/Python-banner.png\n---\n\n# 变量简述\n\nPython 中的变量赋值不需要类型声明。\n每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。\n每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。\n等号（=）用来给变量赋值。\n等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。\n\n```python\nanswer = 42 #之前看到过的简单的变量赋值\n```\n# 标准数据类型\n\n## 数字(Number)\n\n### 长整型(int)\n\n在Python3中，只有一种int代表长整型，可以参照上述进行赋值和计算。在超过类似 C/C++ 中的 int 变量时，自动的转换成一个精度无限的long类型。同时，python提供16进制0x写法，和8进制的0o写法。\n\n### 浮点数(float)\n\n浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，比如，1.23x109和12.3x108是完全相等的。浮点数可以使用平时的小数写法，也支持科学计数写法。\n\n### 布尔值(bool)\n\n布尔值和布尔代数的表示完全一致，一个布尔值只有True、False两种值，要么是True，要么是False，注意其大小写。\n布尔值可以参与数字的运算，此时True代表1，False代表0。\n\n布尔值可以用and、or和not运算，分别对于与，或，非。\n\n### 复数(complex)\n\n复数的赋值可以使用两种方法。\n\n```python\ns = 3 + 1j\nd = complex(3,2)\n```\n### 数值计算\n\npython 支持 加法、减法、乘法、除法、地板除法、取余、乘方的数值计算。在混合计算时，Python会隐式的把整型转换成为浮点数。\n\n```python\n5/2 #除法 返回一个浮点数 2.5\n5//2 #地板除法 返回一个整数 2，向0取整\n5%2 #取余 返回一个整数/浮点数，取决于两个操作数是否有浮点数\n2**5 #乘方\n```\n## 字符串(String)\n\n字符串是以单引号\\'或双引号\\\"括起来的任意文本，比如\\'abc\\'，\\\"xyz\\\"等等。请注意，\\'\\'或\\\"\\\"本身只是一种表示方式，不是字符串的一部分，因此，字符串\\'abc\\'只有a，b，c这3个字符。\n字符串可以用截取的语法，格式为：变量[头下标:尾下标]\n\n```python\nprint  (str[0:-1])  # 输出第一个到倒数第二个的所有字符  \nprint  (str[0])  # 输出字符串第一个字符  \nprint  (str[2:5])  # 输出从第三个开始到第五个的字符  \nprint  (str[2:])  # 输出从第三个开始的后的所有字符  \nprint  (str * 2)  # 输出字符串两次  \nprint  (str + \"TEST\")  # 连接字符串\n```\n注意，python里面的字符串(甚至包括其他引用类型)，是以值比较相等的，而不是像java等语言比较内存地址。故两个内存地址不同，但内容相同的字符串做相等判定，答案是True。\n\n## 列表(List)\n\n列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。\n列表是写在方括号之间、用逗号分隔开的元素列表，列表中的元素是可以改变的。\n和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。\n\n## 元组(Tuple)\n\n元组与列表类似，不同之处在于元组的元素不能修改。元组写在小括号里，元素之间用逗号隔开。\ntuple的元素不可改变，但它可以包含可变的对象，比如list列表。\n构造包含 0 个或 1 个元素的元组比较特殊，所以有一些额外的语法规则：\n\n```python\ntup1 =  ()  # 空元组\ntup2 =  (20,)  # 一个元素，需要在元素后添加逗号\n```\nstring、list和tuple都属于sequence（序列）。\n\n## 集合(Set)\n\n集合是一个无序不重复元素的序列，其基本功能是进行成员关系测试和删除重复元素。\n可以使用大括号 { } 或者 set() 函数创建集合。\n但是创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。\n\n```python\na = set('abracadabra') \nb = set('alacazam') \nprint(a) \nprint(a - b)  # a和b的差集  \nprint(a | b)  # a和b的并集  \nprint(a & b)  # a和b的交集  \nprint(a ^ b)  # a和b中不同时存在的元素\n```\n## 字典(Dictionary)\n\n字典当中的元素是通过键来存取的，而不是通过偏移存取，这是字典与序列不同的地方。\n\n字典是一种映射类型，字典用\"{ }\"标识，它是一个无序的键(key) : 值(value)对集合。\n键(key)必须使用不可变类型，在同一个字典中，键(key)必须是唯一的。\n字典可以通过中括号中加key的方法来获得value，也可以调用.keys() 或 .value() 方法来获得其中的所有键与值。\n\n## 空值(None)\n\n空值是一个特殊的值，用None表示，空值不能代表0，0也不能代表空值。\n\n# 相关函数\n\n## del var\n\n删除一些对象的引用，你可以使用del删除一个或多个的对象引用，如果要多个，用逗号隔开。\n\n```python\ndel var1,var2,var3\n```\n\n## int(x[,base])\n\n```python\nage = int(10.9) # 将x转换为int型变量，向0取整\nstatus = int('10',2) # 构造2进制下的10，即十进制下的2，注意'10'是字符串\n```\n## float(x)\n\n```\nweight = float(50) # 将x转换float型变量\n```\n\n## complex(real[,imag])\n\n```\na = complex(1) # 构造复数 1 + 0j\nb = complex(-1,5) # 构造复数 -1 ＋５ｊ\n```\n## str(x)\n\n将x转换为字符串。\n\n## repr(x)\n\n将对象转化为供解释器读取的形式，返回一个字符串。\n\n## eval(expression[, globals[, locals]])\n\n执行一个字符串表达式，并返回表达式的值。\n\n| 参数 | 含义 |\n|---|---|\n| expression | 表达式 |\n| globals | 变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。 |\n| locals | 变量作用域，局部命名空间，如果被提供，可以是任何映射对象。 |\n\n```python\neval('2 + 2') # 返回一个值为4的int类型\nn = 4\neval('n ** 2') # 返回一个值为16的int类型\neval('\"hello,\" + str(0)') # 返回一个值为'hello,0'的string类型\n```\n## tuple(s)\n\n将s转换为元组。\n\n## list(s)\n\n将s转换为列表。\n\n## dict(d)\n\n将d转换为字典。\n\n```\nsex = dict(boy='1',girl='0') #传入关键字\nweek = dict([('Mon', 0), ('Tues', 1), ('Wed', 2), \n             ('Thur', 3), ('Fri', 4), ('Sat', 5), ('Sun', 6)]) #可迭代对象方式来构造字典\n```\n## frozenset([iterable])\n\n将iterable转换为冻结的集合，冻结后集合不能再添加或删除任何元素。\niterable为可迭代的对象，比如列表、字典、元组等等。\n注意，冻结的集合中任意一个元素不能是列表，但是可以直接冻结列表(这里应该看作均为不可变的元素)。\n\n```python\ntup = (3, 5.0, \"test\", (2, 2), ([2,3],[3,3])) #元素分别为int、float、string、tuple、带有list的tuple\nlist = [321,\"test\",((2,2),(3,3))] #元素分别为int、string、带有tuple的tuple\nfrozenset(tup) # 非法操作，冻结的集合中含有带list的元素\nfrozenset(list) # 合法操作，冻结的中不含有带list的元素\n```\n## chr(x) ord(c)\n\nchr(x) 将整数x以ASCII码表转换成字符。\nord(c) 将字符c以ASCII码表转换成整数。\n\n## hex(x) oct(x)\n\nhex(x) 将整数x转换成16进制，以字符串的格式返回。\noct(x) 将整数x转换成8进制，以字符串的格式返回。\n\n## id(x)\n\n返回变量x的内存地址。\n\n## type(var)\n\n查询变量所指的对象类型。\n\n## isinstance(var, type)\n\n判定查询变量所指的对象类型是不是type，若是则返回True，否则返回False。\n\n```python\nn = 3\nif isinstance(n, int) :\n   print(\"n's type is int)\n```\ntype()与isinstance()的区别在面向对象时可以区分出来。\n若有A类，且B类继承了A类。\n则，type()认为A与B是两种不同的数据类型。\n而，isinstance()认为B类的对象也是一种A类的对象，他们同属于一种数据类型。\n\n---\n\n# 引用\n\n1. http://www.runoob.com/python3/python3-data-type.html\n2. https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000\n","slug":"python/grammar-3","published":1,"updated":"2018-06-08T06:42:45.754Z","_id":"cji4vn31i0009cwvabhqvtzlh","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"变量简述\"><a href=\"#变量简述\" class=\"headerlink\" title=\"变量简述\"></a>变量简述</h1><p>Python 中的变量赋值不需要类型声明。<br>每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。<br>每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。<br>等号（=）用来给变量赋值。<br>等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">answer = <span class=\"number\">42</span> <span class=\"comment\">#之前看到过的简单的变量赋值</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"标准数据类型\"><a href=\"#标准数据类型\" class=\"headerlink\" title=\"标准数据类型\"></a>标准数据类型</h1><h2 id=\"数字-Number\"><a href=\"#数字-Number\" class=\"headerlink\" title=\"数字(Number)\"></a>数字(Number)</h2><h3 id=\"长整型-int\"><a href=\"#长整型-int\" class=\"headerlink\" title=\"长整型(int)\"></a>长整型(int)</h3><p>在Python3中，只有一种int代表长整型，可以参照上述进行赋值和计算。在超过类似 C/C++ 中的 int 变量时，自动的转换成一个精度无限的long类型。同时，python提供16进制0x写法，和8进制的0o写法。</p>\n<h3 id=\"浮点数-float\"><a href=\"#浮点数-float\" class=\"headerlink\" title=\"浮点数(float)\"></a>浮点数(float)</h3><p>浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，比如，1.23x109和12.3x108是完全相等的。浮点数可以使用平时的小数写法，也支持科学计数写法。</p>\n<h3 id=\"布尔值-bool\"><a href=\"#布尔值-bool\" class=\"headerlink\" title=\"布尔值(bool)\"></a>布尔值(bool)</h3><p>布尔值和布尔代数的表示完全一致，一个布尔值只有True、False两种值，要么是True，要么是False，注意其大小写。<br>布尔值可以参与数字的运算，此时True代表1，False代表0。</p>\n<p>布尔值可以用and、or和not运算，分别对于与，或，非。</p>\n<h3 id=\"复数-complex\"><a href=\"#复数-complex\" class=\"headerlink\" title=\"复数(complex)\"></a>复数(complex)</h3><p>复数的赋值可以使用两种方法。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = <span class=\"number\">3</span> + <span class=\"number\">1j</span></span><br><span class=\"line\">d = complex(<span class=\"number\">3</span>,<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"数值计算\"><a href=\"#数值计算\" class=\"headerlink\" title=\"数值计算\"></a>数值计算</h3><p>python 支持 加法、减法、乘法、除法、地板除法、取余、乘方的数值计算。在混合计算时，Python会隐式的把整型转换成为浮点数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">5</span>/<span class=\"number\">2</span> <span class=\"comment\">#除法 返回一个浮点数 2.5</span></span><br><span class=\"line\"><span class=\"number\">5</span>//<span class=\"number\">2</span> <span class=\"comment\">#地板除法 返回一个整数 2，向0取整</span></span><br><span class=\"line\"><span class=\"number\">5</span>%<span class=\"number\">2</span> <span class=\"comment\">#取余 返回一个整数/浮点数，取决于两个操作数是否有浮点数</span></span><br><span class=\"line\"><span class=\"number\">2</span>**<span class=\"number\">5</span> <span class=\"comment\">#乘方</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"字符串-String\"><a href=\"#字符串-String\" class=\"headerlink\" title=\"字符串(String)\"></a>字符串(String)</h2><p>字符串是以单引号\\’或双引号\\”括起来的任意文本，比如\\’abc\\’，\\”xyz\\”等等。请注意，\\’\\’或\\”\\”本身只是一种表示方式，不是字符串的一部分，因此，字符串\\’abc\\’只有a，b，c这3个字符。<br>字符串可以用截取的语法，格式为：变量[头下标:尾下标]</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">print</span>  (str[<span class=\"number\">0</span>:<span class=\"number\">-1</span>])  <span class=\"comment\"># 输出第一个到倒数第二个的所有字符  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str[<span class=\"number\">0</span>])  <span class=\"comment\"># 输出字符串第一个字符  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str[<span class=\"number\">2</span>:<span class=\"number\">5</span>])  <span class=\"comment\"># 输出从第三个开始到第五个的字符  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str[<span class=\"number\">2</span>:])  <span class=\"comment\"># 输出从第三个开始的后的所有字符  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str * <span class=\"number\">2</span>)  <span class=\"comment\"># 输出字符串两次  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str + <span class=\"string\">\"TEST\"</span>)  <span class=\"comment\"># 连接字符串</span></span><br></pre></td></tr></table></figure>\n<p>注意，python里面的字符串(甚至包括其他引用类型)，是以值比较相等的，而不是像java等语言比较内存地址。故两个内存地址不同，但内容相同的字符串做相等判定，答案是True。</p>\n<h2 id=\"列表-List\"><a href=\"#列表-List\" class=\"headerlink\" title=\"列表(List)\"></a>列表(List)</h2><p>列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。<br>列表是写在方括号之间、用逗号分隔开的元素列表，列表中的元素是可以改变的。<br>和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。</p>\n<h2 id=\"元组-Tuple\"><a href=\"#元组-Tuple\" class=\"headerlink\" title=\"元组(Tuple)\"></a>元组(Tuple)</h2><p>元组与列表类似，不同之处在于元组的元素不能修改。元组写在小括号里，元素之间用逗号隔开。<br>tuple的元素不可改变，但它可以包含可变的对象，比如list列表。<br>构造包含 0 个或 1 个元素的元组比较特殊，所以有一些额外的语法规则：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup1 =  ()  <span class=\"comment\"># 空元组</span></span><br><span class=\"line\">tup2 =  (<span class=\"number\">20</span>,)  <span class=\"comment\"># 一个元素，需要在元素后添加逗号</span></span><br></pre></td></tr></table></figure>\n<p>string、list和tuple都属于sequence（序列）。</p>\n<h2 id=\"集合-Set\"><a href=\"#集合-Set\" class=\"headerlink\" title=\"集合(Set)\"></a>集合(Set)</h2><p>集合是一个无序不重复元素的序列，其基本功能是进行成员关系测试和删除重复元素。<br>可以使用大括号 { } 或者 set() 函数创建集合。<br>但是创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = set(<span class=\"string\">'abracadabra'</span>) </span><br><span class=\"line\">b = set(<span class=\"string\">'alacazam'</span>) </span><br><span class=\"line\">print(a) </span><br><span class=\"line\">print(a - b)  <span class=\"comment\"># a和b的差集  </span></span><br><span class=\"line\">print(a | b)  <span class=\"comment\"># a和b的并集  </span></span><br><span class=\"line\">print(a &amp; b)  <span class=\"comment\"># a和b的交集  </span></span><br><span class=\"line\">print(a ^ b)  <span class=\"comment\"># a和b中不同时存在的元素</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"字典-Dictionary\"><a href=\"#字典-Dictionary\" class=\"headerlink\" title=\"字典(Dictionary)\"></a>字典(Dictionary)</h2><p>字典当中的元素是通过键来存取的，而不是通过偏移存取，这是字典与序列不同的地方。</p>\n<p>字典是一种映射类型，字典用”{ }”标识，它是一个无序的键(key) : 值(value)对集合。<br>键(key)必须使用不可变类型，在同一个字典中，键(key)必须是唯一的。<br>字典可以通过中括号中加key的方法来获得value，也可以调用.keys() 或 .value() 方法来获得其中的所有键与值。</p>\n<h2 id=\"空值-None\"><a href=\"#空值-None\" class=\"headerlink\" title=\"空值(None)\"></a>空值(None)</h2><p>空值是一个特殊的值，用None表示，空值不能代表0，0也不能代表空值。</p>\n<h1 id=\"相关函数\"><a href=\"#相关函数\" class=\"headerlink\" title=\"相关函数\"></a>相关函数</h1><h2 id=\"del-var\"><a href=\"#del-var\" class=\"headerlink\" title=\"del var\"></a>del var</h2><p>删除一些对象的引用，你可以使用del删除一个或多个的对象引用，如果要多个，用逗号隔开。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">del</span> var1,var2,var3</span><br></pre></td></tr></table></figure>\n<h2 id=\"int-x-base\"><a href=\"#int-x-base\" class=\"headerlink\" title=\"int(x[,base])\"></a>int(x[,base])</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = int(<span class=\"number\">10.9</span>) <span class=\"comment\"># 将x转换为int型变量，向0取整</span></span><br><span class=\"line\">status = int(<span class=\"string\">'10'</span>,<span class=\"number\">2</span>) <span class=\"comment\"># 构造2进制下的10，即十进制下的2，注意'10'是字符串</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"float-x\"><a href=\"#float-x\" class=\"headerlink\" title=\"float(x)\"></a>float(x)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">weight = float(50) # 将x转换float型变量</span><br></pre></td></tr></table></figure>\n<h2 id=\"complex-real-imag\"><a href=\"#complex-real-imag\" class=\"headerlink\" title=\"complex(real[,imag])\"></a>complex(real[,imag])</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = complex(1) # 构造复数 1 + 0j</span><br><span class=\"line\">b = complex(-1,5) # 构造复数 -1 ＋５ｊ</span><br></pre></td></tr></table></figure>\n<h2 id=\"str-x\"><a href=\"#str-x\" class=\"headerlink\" title=\"str(x)\"></a>str(x)</h2><p>将x转换为字符串。</p>\n<h2 id=\"repr-x\"><a href=\"#repr-x\" class=\"headerlink\" title=\"repr(x)\"></a>repr(x)</h2><p>将对象转化为供解释器读取的形式，返回一个字符串。</p>\n<h2 id=\"eval-expression-globals-locals\"><a href=\"#eval-expression-globals-locals\" class=\"headerlink\" title=\"eval(expression[, globals[, locals]])\"></a>eval(expression[, globals[, locals]])</h2><p>执行一个字符串表达式，并返回表达式的值。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>expression</td>\n<td>表达式</td>\n</tr>\n<tr>\n<td>globals</td>\n<td>变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。</td>\n</tr>\n<tr>\n<td>locals</td>\n<td>变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval(<span class=\"string\">'2 + 2'</span>) <span class=\"comment\"># 返回一个值为4的int类型</span></span><br><span class=\"line\">n = <span class=\"number\">4</span></span><br><span class=\"line\">eval(<span class=\"string\">'n ** 2'</span>) <span class=\"comment\"># 返回一个值为16的int类型</span></span><br><span class=\"line\">eval(<span class=\"string\">'\"hello,\" + str(0)'</span>) <span class=\"comment\"># 返回一个值为'hello,0'的string类型</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"tuple-s\"><a href=\"#tuple-s\" class=\"headerlink\" title=\"tuple(s)\"></a>tuple(s)</h2><p>将s转换为元组。</p>\n<h2 id=\"list-s\"><a href=\"#list-s\" class=\"headerlink\" title=\"list(s)\"></a>list(s)</h2><p>将s转换为列表。</p>\n<h2 id=\"dict-d\"><a href=\"#dict-d\" class=\"headerlink\" title=\"dict(d)\"></a>dict(d)</h2><p>将d转换为字典。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sex = dict(boy=&apos;1&apos;,girl=&apos;0&apos;) #传入关键字</span><br><span class=\"line\">week = dict([(&apos;Mon&apos;, 0), (&apos;Tues&apos;, 1), (&apos;Wed&apos;, 2), </span><br><span class=\"line\">             (&apos;Thur&apos;, 3), (&apos;Fri&apos;, 4), (&apos;Sat&apos;, 5), (&apos;Sun&apos;, 6)]) #可迭代对象方式来构造字典</span><br></pre></td></tr></table></figure>\n<h2 id=\"frozenset-iterable\"><a href=\"#frozenset-iterable\" class=\"headerlink\" title=\"frozenset([iterable])\"></a>frozenset([iterable])</h2><p>将iterable转换为冻结的集合，冻结后集合不能再添加或删除任何元素。<br>iterable为可迭代的对象，比如列表、字典、元组等等。<br>注意，冻结的集合中任意一个元素不能是列表，但是可以直接冻结列表(这里应该看作均为不可变的元素)。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup = (<span class=\"number\">3</span>, <span class=\"number\">5.0</span>, <span class=\"string\">\"test\"</span>, (<span class=\"number\">2</span>, <span class=\"number\">2</span>), ([<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">3</span>,<span class=\"number\">3</span>])) <span class=\"comment\">#元素分别为int、float、string、tuple、带有list的tuple</span></span><br><span class=\"line\">list = [<span class=\"number\">321</span>,<span class=\"string\">\"test\"</span>,((<span class=\"number\">2</span>,<span class=\"number\">2</span>),(<span class=\"number\">3</span>,<span class=\"number\">3</span>))] <span class=\"comment\">#元素分别为int、string、带有tuple的tuple</span></span><br><span class=\"line\">frozenset(tup) <span class=\"comment\"># 非法操作，冻结的集合中含有带list的元素</span></span><br><span class=\"line\">frozenset(list) <span class=\"comment\"># 合法操作，冻结的中不含有带list的元素</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"chr-x-ord-c\"><a href=\"#chr-x-ord-c\" class=\"headerlink\" title=\"chr(x) ord(c)\"></a>chr(x) ord(c)</h2><p>chr(x) 将整数x以ASCII码表转换成字符。<br>ord(c) 将字符c以ASCII码表转换成整数。</p>\n<h2 id=\"hex-x-oct-x\"><a href=\"#hex-x-oct-x\" class=\"headerlink\" title=\"hex(x) oct(x)\"></a>hex(x) oct(x)</h2><p>hex(x) 将整数x转换成16进制，以字符串的格式返回。<br>oct(x) 将整数x转换成8进制，以字符串的格式返回。</p>\n<h2 id=\"id-x\"><a href=\"#id-x\" class=\"headerlink\" title=\"id(x)\"></a>id(x)</h2><p>返回变量x的内存地址。</p>\n<h2 id=\"type-var\"><a href=\"#type-var\" class=\"headerlink\" title=\"type(var)\"></a>type(var)</h2><p>查询变量所指的对象类型。</p>\n<h2 id=\"isinstance-var-type\"><a href=\"#isinstance-var-type\" class=\"headerlink\" title=\"isinstance(var, type)\"></a>isinstance(var, type)</h2><p>判定查询变量所指的对象类型是不是type，若是则返回True，否则返回False。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n = <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> isinstance(n, int) :</span><br><span class=\"line\">   print(<span class=\"string\">\"n's type is int)</span></span><br></pre></td></tr></table></figure>\n<p>type()与isinstance()的区别在面向对象时可以区分出来。<br>若有A类，且B类继承了A类。<br>则，type()认为A与B是两种不同的数据类型。<br>而，isinstance()认为B类的对象也是一种A类的对象，他们同属于一种数据类型。</p>\n<hr>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ol>\n<li><a href=\"http://www.runoob.com/python3/python3-data-type.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/python3/python3-data-type.html</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"变量简述\"><a href=\"#变量简述\" class=\"headerlink\" title=\"变量简述\"></a>变量简述</h1><p>Python 中的变量赋值不需要类型声明。<br>每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。<br>每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。<br>等号（=）用来给变量赋值。<br>等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">answer = <span class=\"number\">42</span> <span class=\"comment\">#之前看到过的简单的变量赋值</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"标准数据类型\"><a href=\"#标准数据类型\" class=\"headerlink\" title=\"标准数据类型\"></a>标准数据类型</h1><h2 id=\"数字-Number\"><a href=\"#数字-Number\" class=\"headerlink\" title=\"数字(Number)\"></a>数字(Number)</h2><h3 id=\"长整型-int\"><a href=\"#长整型-int\" class=\"headerlink\" title=\"长整型(int)\"></a>长整型(int)</h3><p>在Python3中，只有一种int代表长整型，可以参照上述进行赋值和计算。在超过类似 C/C++ 中的 int 变量时，自动的转换成一个精度无限的long类型。同时，python提供16进制0x写法，和8进制的0o写法。</p>\n<h3 id=\"浮点数-float\"><a href=\"#浮点数-float\" class=\"headerlink\" title=\"浮点数(float)\"></a>浮点数(float)</h3><p>浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，比如，1.23x109和12.3x108是完全相等的。浮点数可以使用平时的小数写法，也支持科学计数写法。</p>\n<h3 id=\"布尔值-bool\"><a href=\"#布尔值-bool\" class=\"headerlink\" title=\"布尔值(bool)\"></a>布尔值(bool)</h3><p>布尔值和布尔代数的表示完全一致，一个布尔值只有True、False两种值，要么是True，要么是False，注意其大小写。<br>布尔值可以参与数字的运算，此时True代表1，False代表0。</p>\n<p>布尔值可以用and、or和not运算，分别对于与，或，非。</p>\n<h3 id=\"复数-complex\"><a href=\"#复数-complex\" class=\"headerlink\" title=\"复数(complex)\"></a>复数(complex)</h3><p>复数的赋值可以使用两种方法。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = <span class=\"number\">3</span> + <span class=\"number\">1j</span></span><br><span class=\"line\">d = complex(<span class=\"number\">3</span>,<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"数值计算\"><a href=\"#数值计算\" class=\"headerlink\" title=\"数值计算\"></a>数值计算</h3><p>python 支持 加法、减法、乘法、除法、地板除法、取余、乘方的数值计算。在混合计算时，Python会隐式的把整型转换成为浮点数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">5</span>/<span class=\"number\">2</span> <span class=\"comment\">#除法 返回一个浮点数 2.5</span></span><br><span class=\"line\"><span class=\"number\">5</span>//<span class=\"number\">2</span> <span class=\"comment\">#地板除法 返回一个整数 2，向0取整</span></span><br><span class=\"line\"><span class=\"number\">5</span>%<span class=\"number\">2</span> <span class=\"comment\">#取余 返回一个整数/浮点数，取决于两个操作数是否有浮点数</span></span><br><span class=\"line\"><span class=\"number\">2</span>**<span class=\"number\">5</span> <span class=\"comment\">#乘方</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"字符串-String\"><a href=\"#字符串-String\" class=\"headerlink\" title=\"字符串(String)\"></a>字符串(String)</h2><p>字符串是以单引号\\’或双引号\\”括起来的任意文本，比如\\’abc\\’，\\”xyz\\”等等。请注意，\\’\\’或\\”\\”本身只是一种表示方式，不是字符串的一部分，因此，字符串\\’abc\\’只有a，b，c这3个字符。<br>字符串可以用截取的语法，格式为：变量[头下标:尾下标]</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">print</span>  (str[<span class=\"number\">0</span>:<span class=\"number\">-1</span>])  <span class=\"comment\"># 输出第一个到倒数第二个的所有字符  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str[<span class=\"number\">0</span>])  <span class=\"comment\"># 输出字符串第一个字符  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str[<span class=\"number\">2</span>:<span class=\"number\">5</span>])  <span class=\"comment\"># 输出从第三个开始到第五个的字符  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str[<span class=\"number\">2</span>:])  <span class=\"comment\"># 输出从第三个开始的后的所有字符  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str * <span class=\"number\">2</span>)  <span class=\"comment\"># 输出字符串两次  </span></span><br><span class=\"line\"><span class=\"keyword\">print</span>  (str + <span class=\"string\">\"TEST\"</span>)  <span class=\"comment\"># 连接字符串</span></span><br></pre></td></tr></table></figure>\n<p>注意，python里面的字符串(甚至包括其他引用类型)，是以值比较相等的，而不是像java等语言比较内存地址。故两个内存地址不同，但内容相同的字符串做相等判定，答案是True。</p>\n<h2 id=\"列表-List\"><a href=\"#列表-List\" class=\"headerlink\" title=\"列表(List)\"></a>列表(List)</h2><p>列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。<br>列表是写在方括号之间、用逗号分隔开的元素列表，列表中的元素是可以改变的。<br>和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。</p>\n<h2 id=\"元组-Tuple\"><a href=\"#元组-Tuple\" class=\"headerlink\" title=\"元组(Tuple)\"></a>元组(Tuple)</h2><p>元组与列表类似，不同之处在于元组的元素不能修改。元组写在小括号里，元素之间用逗号隔开。<br>tuple的元素不可改变，但它可以包含可变的对象，比如list列表。<br>构造包含 0 个或 1 个元素的元组比较特殊，所以有一些额外的语法规则：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup1 =  ()  <span class=\"comment\"># 空元组</span></span><br><span class=\"line\">tup2 =  (<span class=\"number\">20</span>,)  <span class=\"comment\"># 一个元素，需要在元素后添加逗号</span></span><br></pre></td></tr></table></figure>\n<p>string、list和tuple都属于sequence（序列）。</p>\n<h2 id=\"集合-Set\"><a href=\"#集合-Set\" class=\"headerlink\" title=\"集合(Set)\"></a>集合(Set)</h2><p>集合是一个无序不重复元素的序列，其基本功能是进行成员关系测试和删除重复元素。<br>可以使用大括号 { } 或者 set() 函数创建集合。<br>但是创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = set(<span class=\"string\">'abracadabra'</span>) </span><br><span class=\"line\">b = set(<span class=\"string\">'alacazam'</span>) </span><br><span class=\"line\">print(a) </span><br><span class=\"line\">print(a - b)  <span class=\"comment\"># a和b的差集  </span></span><br><span class=\"line\">print(a | b)  <span class=\"comment\"># a和b的并集  </span></span><br><span class=\"line\">print(a &amp; b)  <span class=\"comment\"># a和b的交集  </span></span><br><span class=\"line\">print(a ^ b)  <span class=\"comment\"># a和b中不同时存在的元素</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"字典-Dictionary\"><a href=\"#字典-Dictionary\" class=\"headerlink\" title=\"字典(Dictionary)\"></a>字典(Dictionary)</h2><p>字典当中的元素是通过键来存取的，而不是通过偏移存取，这是字典与序列不同的地方。</p>\n<p>字典是一种映射类型，字典用”{ }”标识，它是一个无序的键(key) : 值(value)对集合。<br>键(key)必须使用不可变类型，在同一个字典中，键(key)必须是唯一的。<br>字典可以通过中括号中加key的方法来获得value，也可以调用.keys() 或 .value() 方法来获得其中的所有键与值。</p>\n<h2 id=\"空值-None\"><a href=\"#空值-None\" class=\"headerlink\" title=\"空值(None)\"></a>空值(None)</h2><p>空值是一个特殊的值，用None表示，空值不能代表0，0也不能代表空值。</p>\n<h1 id=\"相关函数\"><a href=\"#相关函数\" class=\"headerlink\" title=\"相关函数\"></a>相关函数</h1><h2 id=\"del-var\"><a href=\"#del-var\" class=\"headerlink\" title=\"del var\"></a>del var</h2><p>删除一些对象的引用，你可以使用del删除一个或多个的对象引用，如果要多个，用逗号隔开。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">del</span> var1,var2,var3</span><br></pre></td></tr></table></figure>\n<h2 id=\"int-x-base\"><a href=\"#int-x-base\" class=\"headerlink\" title=\"int(x[,base])\"></a>int(x[,base])</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = int(<span class=\"number\">10.9</span>) <span class=\"comment\"># 将x转换为int型变量，向0取整</span></span><br><span class=\"line\">status = int(<span class=\"string\">'10'</span>,<span class=\"number\">2</span>) <span class=\"comment\"># 构造2进制下的10，即十进制下的2，注意'10'是字符串</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"float-x\"><a href=\"#float-x\" class=\"headerlink\" title=\"float(x)\"></a>float(x)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">weight = float(50) # 将x转换float型变量</span><br></pre></td></tr></table></figure>\n<h2 id=\"complex-real-imag\"><a href=\"#complex-real-imag\" class=\"headerlink\" title=\"complex(real[,imag])\"></a>complex(real[,imag])</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = complex(1) # 构造复数 1 + 0j</span><br><span class=\"line\">b = complex(-1,5) # 构造复数 -1 ＋５ｊ</span><br></pre></td></tr></table></figure>\n<h2 id=\"str-x\"><a href=\"#str-x\" class=\"headerlink\" title=\"str(x)\"></a>str(x)</h2><p>将x转换为字符串。</p>\n<h2 id=\"repr-x\"><a href=\"#repr-x\" class=\"headerlink\" title=\"repr(x)\"></a>repr(x)</h2><p>将对象转化为供解释器读取的形式，返回一个字符串。</p>\n<h2 id=\"eval-expression-globals-locals\"><a href=\"#eval-expression-globals-locals\" class=\"headerlink\" title=\"eval(expression[, globals[, locals]])\"></a>eval(expression[, globals[, locals]])</h2><p>执行一个字符串表达式，并返回表达式的值。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>expression</td>\n<td>表达式</td>\n</tr>\n<tr>\n<td>globals</td>\n<td>变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。</td>\n</tr>\n<tr>\n<td>locals</td>\n<td>变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval(<span class=\"string\">'2 + 2'</span>) <span class=\"comment\"># 返回一个值为4的int类型</span></span><br><span class=\"line\">n = <span class=\"number\">4</span></span><br><span class=\"line\">eval(<span class=\"string\">'n ** 2'</span>) <span class=\"comment\"># 返回一个值为16的int类型</span></span><br><span class=\"line\">eval(<span class=\"string\">'\"hello,\" + str(0)'</span>) <span class=\"comment\"># 返回一个值为'hello,0'的string类型</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"tuple-s\"><a href=\"#tuple-s\" class=\"headerlink\" title=\"tuple(s)\"></a>tuple(s)</h2><p>将s转换为元组。</p>\n<h2 id=\"list-s\"><a href=\"#list-s\" class=\"headerlink\" title=\"list(s)\"></a>list(s)</h2><p>将s转换为列表。</p>\n<h2 id=\"dict-d\"><a href=\"#dict-d\" class=\"headerlink\" title=\"dict(d)\"></a>dict(d)</h2><p>将d转换为字典。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sex = dict(boy=&apos;1&apos;,girl=&apos;0&apos;) #传入关键字</span><br><span class=\"line\">week = dict([(&apos;Mon&apos;, 0), (&apos;Tues&apos;, 1), (&apos;Wed&apos;, 2), </span><br><span class=\"line\">             (&apos;Thur&apos;, 3), (&apos;Fri&apos;, 4), (&apos;Sat&apos;, 5), (&apos;Sun&apos;, 6)]) #可迭代对象方式来构造字典</span><br></pre></td></tr></table></figure>\n<h2 id=\"frozenset-iterable\"><a href=\"#frozenset-iterable\" class=\"headerlink\" title=\"frozenset([iterable])\"></a>frozenset([iterable])</h2><p>将iterable转换为冻结的集合，冻结后集合不能再添加或删除任何元素。<br>iterable为可迭代的对象，比如列表、字典、元组等等。<br>注意，冻结的集合中任意一个元素不能是列表，但是可以直接冻结列表(这里应该看作均为不可变的元素)。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tup = (<span class=\"number\">3</span>, <span class=\"number\">5.0</span>, <span class=\"string\">\"test\"</span>, (<span class=\"number\">2</span>, <span class=\"number\">2</span>), ([<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">3</span>,<span class=\"number\">3</span>])) <span class=\"comment\">#元素分别为int、float、string、tuple、带有list的tuple</span></span><br><span class=\"line\">list = [<span class=\"number\">321</span>,<span class=\"string\">\"test\"</span>,((<span class=\"number\">2</span>,<span class=\"number\">2</span>),(<span class=\"number\">3</span>,<span class=\"number\">3</span>))] <span class=\"comment\">#元素分别为int、string、带有tuple的tuple</span></span><br><span class=\"line\">frozenset(tup) <span class=\"comment\"># 非法操作，冻结的集合中含有带list的元素</span></span><br><span class=\"line\">frozenset(list) <span class=\"comment\"># 合法操作，冻结的中不含有带list的元素</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"chr-x-ord-c\"><a href=\"#chr-x-ord-c\" class=\"headerlink\" title=\"chr(x) ord(c)\"></a>chr(x) ord(c)</h2><p>chr(x) 将整数x以ASCII码表转换成字符。<br>ord(c) 将字符c以ASCII码表转换成整数。</p>\n<h2 id=\"hex-x-oct-x\"><a href=\"#hex-x-oct-x\" class=\"headerlink\" title=\"hex(x) oct(x)\"></a>hex(x) oct(x)</h2><p>hex(x) 将整数x转换成16进制，以字符串的格式返回。<br>oct(x) 将整数x转换成8进制，以字符串的格式返回。</p>\n<h2 id=\"id-x\"><a href=\"#id-x\" class=\"headerlink\" title=\"id(x)\"></a>id(x)</h2><p>返回变量x的内存地址。</p>\n<h2 id=\"type-var\"><a href=\"#type-var\" class=\"headerlink\" title=\"type(var)\"></a>type(var)</h2><p>查询变量所指的对象类型。</p>\n<h2 id=\"isinstance-var-type\"><a href=\"#isinstance-var-type\" class=\"headerlink\" title=\"isinstance(var, type)\"></a>isinstance(var, type)</h2><p>判定查询变量所指的对象类型是不是type，若是则返回True，否则返回False。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n = <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> isinstance(n, int) :</span><br><span class=\"line\">   print(<span class=\"string\">\"n's type is int)</span></span><br></pre></td></tr></table></figure>\n<p>type()与isinstance()的区别在面向对象时可以区分出来。<br>若有A类，且B类继承了A类。<br>则，type()认为A与B是两种不同的数据类型。<br>而，isinstance()认为B类的对象也是一种A类的对象，他们同属于一种数据类型。</p>\n<hr>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ol>\n<li><a href=\"http://www.runoob.com/python3/python3-data-type.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/python3/python3-data-type.html</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000</a></li>\n</ol>\n"},{"title":"Python3 学习之路(2) 基础语法","date":"2018-06-07T17:26:47.204Z","toc":true,"thumbnail":"/images/python/Python-thumbnail.png","banner":"/images/python/Python-banner.png","_content":"\n# 你好，世界\n\n在工程下新建 __main.py__ 文件，向文件写入\n\n```python3\nprint(\"你好，世界\")\n```\n如果你的文件是UTF-8编码存储的，那么这个文件可以立即运行，如果不是，会报一个 SyntaxError 错误，我建议的解决方法是将存储的文件编码改成UTF-8。\n\n同时，我还建议在文件头加入一行`#coding=utf-8`，这样Python会以UTF-8编码解析此文件。而之前没有加入本行也能运行的原因是因为：Python3.X 源码文件默认使用UTF-8编码，所以可以正常解析中文，无需指定UTF-8编码。\n\n# 命令提示符/终端下调用脚本\n\n在命令提示符/终端下，进入之前工程写好的 __main.py__ 文件的目录，输入 `python main.py`，便可执行，我们称这种方式为脚本编程。\n\n# 标识符\n\n在 Python 里，标识符由字母、数字、下划线组成。\n\n在 Python 中，所有标识符可以包括英文、数字以及下划线(\\_)，但不能以数字开头。\n\nPython 中的标识符是区分大小写的。\n\n以下划线开头的标识符是有特殊意义的。以单下划线开头 \\_foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；\n\n- 以双下划线开头的 \\_\\_foo 代表类的私有成员\n- 以双下划线开头和结尾的 \\_\\_foo\\_\\_ 代表 Python 里特殊方法专用的标识，如 \\_\\_init\\_\\_() 代表类的构造函数。\n\n# 保留字符\n\n下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。\n\n所有 Python 的关键字只包含小写字母。\n\n||||\n|:-:|:-:|:-:|\n| and | exec | not |\n| assert | finally | or |\n| break | for | pass |\n| class | from | print |\n| continue | global | raise |\n| def | if | return |\n| del | import | try |\n| elif | in | while |\n| else | is | with |\n| except | lambda | yield |\n\n# 行和缩进\n\nPython的代码不使用大括号 {} 来控制逻辑、作用范围，而是适用行首的空白缩进来控制。\n行首的空白缩进可以适用 Tab 或者空格来控制，每一个逻辑、作用范围的递进，需要保证相同的缩进量，譬如，一直缩进为4个空格的程序，进入一个判定，但是接下来的缩进量变成了5个空格，则会中断程序的运行。\n缩进量在一开始就需要定下，然后之后要严格执行，一般建议4个空格作为单位缩进量，并且不要混用 Tab。\n\n## 多行的语句\n\nPython不使用像 C/C++ 一样强制要求分号作为一个语句的结束，在python中一般以新行作为语句的结束符。\n\n但是我们可以使用斜杠（ \\\\）将一行的语句分为多行显示，\n\n```python\ntotal = a + \\\n        b + \\\n        c\n```\n语句中包含 [], {} 或 () 括号就不需要使用多行连接符。\n\n```python\ndays =  ['Monday',  'Tuesday',  'Wednesday',  \n\t\t\t'Thursday',  'Friday']\n```\nPython 也可以同一行显示多条语句，方法是用分号 ; 分开，但极不建议这样做。\n\n```python\nprint 'hello';print 'World';\n```\n# 引号\n\nPython 可以使用引号( ' )、双引号( \" )、三引号( ''' 或 \"\"\" ) 来表示字符串，引号的开始与结束必须的相同类型的。\n\n其中三引号可以由多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释。\n\n```python\nword =  'word' \nsentence =  \"这是一个句子。\" \nparagraph =  \"\"\"这是一个段落。\n包含了多个语句\"\"\"\n```\n# 注释\n\npython中单行注释采用 # 开头。\n注释可以在语句或表达式行末：\n\n```python\nanswer =  \"42\"  # 这是一个注释\n```\npython 中多行注释使用三个单引号(''')或三个双引号(\"\"\")。\n\n# 转义字符\n\n\\\\可以转义很多字符，比如\\\\n表示换行，\\\\t表示制表符，字符\\\\本身也要转义，所以\\\\\\\\表示的字符就是\\\\\n\n如果字符串里面有很多字符都需要转义，就需要加很多\\\\，为了简化，Python还允许用r''表示''内部的字符串默认不转义。\n\n---\n\n# 引用\n\n1. http://www.runoob.com/python/python-basic-syntax.html\n2. https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000\n\n","source":"_posts/python/grammar-2.md","raw":"---\ntitle: Python3 学习之路(2) 基础语法\ndate: 2018年6月8日 01:27:17\ncategories: Python\ntags: \n    - Python\ntoc: true\nthumbnail: /images/python/Python-thumbnail.png\nbanner: /images/python/Python-banner.png\n---\n\n# 你好，世界\n\n在工程下新建 __main.py__ 文件，向文件写入\n\n```python3\nprint(\"你好，世界\")\n```\n如果你的文件是UTF-8编码存储的，那么这个文件可以立即运行，如果不是，会报一个 SyntaxError 错误，我建议的解决方法是将存储的文件编码改成UTF-8。\n\n同时，我还建议在文件头加入一行`#coding=utf-8`，这样Python会以UTF-8编码解析此文件。而之前没有加入本行也能运行的原因是因为：Python3.X 源码文件默认使用UTF-8编码，所以可以正常解析中文，无需指定UTF-8编码。\n\n# 命令提示符/终端下调用脚本\n\n在命令提示符/终端下，进入之前工程写好的 __main.py__ 文件的目录，输入 `python main.py`，便可执行，我们称这种方式为脚本编程。\n\n# 标识符\n\n在 Python 里，标识符由字母、数字、下划线组成。\n\n在 Python 中，所有标识符可以包括英文、数字以及下划线(\\_)，但不能以数字开头。\n\nPython 中的标识符是区分大小写的。\n\n以下划线开头的标识符是有特殊意义的。以单下划线开头 \\_foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；\n\n- 以双下划线开头的 \\_\\_foo 代表类的私有成员\n- 以双下划线开头和结尾的 \\_\\_foo\\_\\_ 代表 Python 里特殊方法专用的标识，如 \\_\\_init\\_\\_() 代表类的构造函数。\n\n# 保留字符\n\n下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。\n\n所有 Python 的关键字只包含小写字母。\n\n||||\n|:-:|:-:|:-:|\n| and | exec | not |\n| assert | finally | or |\n| break | for | pass |\n| class | from | print |\n| continue | global | raise |\n| def | if | return |\n| del | import | try |\n| elif | in | while |\n| else | is | with |\n| except | lambda | yield |\n\n# 行和缩进\n\nPython的代码不使用大括号 {} 来控制逻辑、作用范围，而是适用行首的空白缩进来控制。\n行首的空白缩进可以适用 Tab 或者空格来控制，每一个逻辑、作用范围的递进，需要保证相同的缩进量，譬如，一直缩进为4个空格的程序，进入一个判定，但是接下来的缩进量变成了5个空格，则会中断程序的运行。\n缩进量在一开始就需要定下，然后之后要严格执行，一般建议4个空格作为单位缩进量，并且不要混用 Tab。\n\n## 多行的语句\n\nPython不使用像 C/C++ 一样强制要求分号作为一个语句的结束，在python中一般以新行作为语句的结束符。\n\n但是我们可以使用斜杠（ \\\\）将一行的语句分为多行显示，\n\n```python\ntotal = a + \\\n        b + \\\n        c\n```\n语句中包含 [], {} 或 () 括号就不需要使用多行连接符。\n\n```python\ndays =  ['Monday',  'Tuesday',  'Wednesday',  \n\t\t\t'Thursday',  'Friday']\n```\nPython 也可以同一行显示多条语句，方法是用分号 ; 分开，但极不建议这样做。\n\n```python\nprint 'hello';print 'World';\n```\n# 引号\n\nPython 可以使用引号( ' )、双引号( \" )、三引号( ''' 或 \"\"\" ) 来表示字符串，引号的开始与结束必须的相同类型的。\n\n其中三引号可以由多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释。\n\n```python\nword =  'word' \nsentence =  \"这是一个句子。\" \nparagraph =  \"\"\"这是一个段落。\n包含了多个语句\"\"\"\n```\n# 注释\n\npython中单行注释采用 # 开头。\n注释可以在语句或表达式行末：\n\n```python\nanswer =  \"42\"  # 这是一个注释\n```\npython 中多行注释使用三个单引号(''')或三个双引号(\"\"\")。\n\n# 转义字符\n\n\\\\可以转义很多字符，比如\\\\n表示换行，\\\\t表示制表符，字符\\\\本身也要转义，所以\\\\\\\\表示的字符就是\\\\\n\n如果字符串里面有很多字符都需要转义，就需要加很多\\\\，为了简化，Python还允许用r''表示''内部的字符串默认不转义。\n\n---\n\n# 引用\n\n1. http://www.runoob.com/python/python-basic-syntax.html\n2. https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000\n\n","slug":"python/grammar-2","published":1,"updated":"2018-06-07T18:31:26.979Z","_id":"cji4vn5ge000ccwvadnw3977e","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"你好，世界\"><a href=\"#你好，世界\" class=\"headerlink\" title=\"你好，世界\"></a>你好，世界</h1><p>在工程下新建 <strong>main.py</strong> 文件，向文件写入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;你好，世界&quot;)</span><br></pre></td></tr></table></figure>\n<p>如果你的文件是UTF-8编码存储的，那么这个文件可以立即运行，如果不是，会报一个 SyntaxError 错误，我建议的解决方法是将存储的文件编码改成UTF-8。</p>\n<p>同时，我还建议在文件头加入一行<code>#coding=utf-8</code>，这样Python会以UTF-8编码解析此文件。而之前没有加入本行也能运行的原因是因为：Python3.X 源码文件默认使用UTF-8编码，所以可以正常解析中文，无需指定UTF-8编码。</p>\n<h1 id=\"命令提示符-终端下调用脚本\"><a href=\"#命令提示符-终端下调用脚本\" class=\"headerlink\" title=\"命令提示符/终端下调用脚本\"></a>命令提示符/终端下调用脚本</h1><p>在命令提示符/终端下，进入之前工程写好的 <strong>main.py</strong> 文件的目录，输入 <code>python main.py</code>，便可执行，我们称这种方式为脚本编程。</p>\n<h1 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h1><p>在 Python 里，标识符由字母、数字、下划线组成。</p>\n<p>在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。</p>\n<p>Python 中的标识符是区分大小写的。</p>\n<p>以下划线开头的标识符是有特殊意义的。以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；</p>\n<ul>\n<li>以双下划线开头的 __foo 代表类的私有成员</li>\n<li>以双下划线开头和结尾的 __foo__ 代表 Python 里特殊方法专用的标识，如 __init__() 代表类的构造函数。</li>\n</ul>\n<h1 id=\"保留字符\"><a href=\"#保留字符\" class=\"headerlink\" title=\"保留字符\"></a>保留字符</h1><p>下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。</p>\n<p>所有 Python 的关键字只包含小写字母。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">and</td>\n<td style=\"text-align:center\">exec</td>\n<td style=\"text-align:center\">not</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">assert</td>\n<td style=\"text-align:center\">finally</td>\n<td style=\"text-align:center\">or</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">break</td>\n<td style=\"text-align:center\">for</td>\n<td style=\"text-align:center\">pass</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">class</td>\n<td style=\"text-align:center\">from</td>\n<td style=\"text-align:center\">print</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">continue</td>\n<td style=\"text-align:center\">global</td>\n<td style=\"text-align:center\">raise</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">def</td>\n<td style=\"text-align:center\">if</td>\n<td style=\"text-align:center\">return</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">del</td>\n<td style=\"text-align:center\">import</td>\n<td style=\"text-align:center\">try</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">elif</td>\n<td style=\"text-align:center\">in</td>\n<td style=\"text-align:center\">while</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">else</td>\n<td style=\"text-align:center\">is</td>\n<td style=\"text-align:center\">with</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">except</td>\n<td style=\"text-align:center\">lambda</td>\n<td style=\"text-align:center\">yield</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"行和缩进\"><a href=\"#行和缩进\" class=\"headerlink\" title=\"行和缩进\"></a>行和缩进</h1><p>Python的代码不使用大括号 {} 来控制逻辑、作用范围，而是适用行首的空白缩进来控制。<br>行首的空白缩进可以适用 Tab 或者空格来控制，每一个逻辑、作用范围的递进，需要保证相同的缩进量，譬如，一直缩进为4个空格的程序，进入一个判定，但是接下来的缩进量变成了5个空格，则会中断程序的运行。<br>缩进量在一开始就需要定下，然后之后要严格执行，一般建议4个空格作为单位缩进量，并且不要混用 Tab。</p>\n<h2 id=\"多行的语句\"><a href=\"#多行的语句\" class=\"headerlink\" title=\"多行的语句\"></a>多行的语句</h2><p>Python不使用像 C/C++ 一样强制要求分号作为一个语句的结束，在python中一般以新行作为语句的结束符。</p>\n<p>但是我们可以使用斜杠（ \\）将一行的语句分为多行显示，</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">total = a + \\</span><br><span class=\"line\">        b + \\</span><br><span class=\"line\">        c</span><br></pre></td></tr></table></figure>\n<p>语句中包含 [], {} 或 () 括号就不需要使用多行连接符。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">days =  [<span class=\"string\">'Monday'</span>,  <span class=\"string\">'Tuesday'</span>,  <span class=\"string\">'Wednesday'</span>,  </span><br><span class=\"line\">\t\t\t<span class=\"string\">'Thursday'</span>,  <span class=\"string\">'Friday'</span>]</span><br></pre></td></tr></table></figure>\n<p>Python 也可以同一行显示多条语句，方法是用分号 ; 分开，但极不建议这样做。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">'hello'</span>;<span class=\"keyword\">print</span> <span class=\"string\">'World'</span>;</span><br></pre></td></tr></table></figure>\n<h1 id=\"引号\"><a href=\"#引号\" class=\"headerlink\" title=\"引号\"></a>引号</h1><p>Python 可以使用引号( ‘ )、双引号( “ )、三引号( ‘’’ 或 “”” ) 来表示字符串，引号的开始与结束必须的相同类型的。</p>\n<p>其中三引号可以由多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">word =  <span class=\"string\">'word'</span> </span><br><span class=\"line\">sentence =  <span class=\"string\">\"这是一个句子。\"</span> </span><br><span class=\"line\">paragraph =  <span class=\"string\">\"\"\"这是一个段落。</span></span><br><span class=\"line\"><span class=\"string\">包含了多个语句\"\"\"</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><p>python中单行注释采用 # 开头。<br>注释可以在语句或表达式行末：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">answer =  <span class=\"string\">\"42\"</span>  <span class=\"comment\"># 这是一个注释</span></span><br></pre></td></tr></table></figure>\n<p>python 中多行注释使用三个单引号(‘’’)或三个双引号(“””)。</p>\n<h1 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h1><p>\\可以转义很多字符，比如\\n表示换行，\\t表示制表符，字符\\本身也要转义，所以\\\\表示的字符就是\\</p>\n<p>如果字符串里面有很多字符都需要转义，就需要加很多\\，为了简化，Python还允许用r’’表示’’内部的字符串默认不转义。</p>\n<hr>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ol>\n<li><a href=\"http://www.runoob.com/python/python-basic-syntax.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/python/python-basic-syntax.html</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"你好，世界\"><a href=\"#你好，世界\" class=\"headerlink\" title=\"你好，世界\"></a>你好，世界</h1><p>在工程下新建 <strong>main.py</strong> 文件，向文件写入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;你好，世界&quot;)</span><br></pre></td></tr></table></figure>\n<p>如果你的文件是UTF-8编码存储的，那么这个文件可以立即运行，如果不是，会报一个 SyntaxError 错误，我建议的解决方法是将存储的文件编码改成UTF-8。</p>\n<p>同时，我还建议在文件头加入一行<code>#coding=utf-8</code>，这样Python会以UTF-8编码解析此文件。而之前没有加入本行也能运行的原因是因为：Python3.X 源码文件默认使用UTF-8编码，所以可以正常解析中文，无需指定UTF-8编码。</p>\n<h1 id=\"命令提示符-终端下调用脚本\"><a href=\"#命令提示符-终端下调用脚本\" class=\"headerlink\" title=\"命令提示符/终端下调用脚本\"></a>命令提示符/终端下调用脚本</h1><p>在命令提示符/终端下，进入之前工程写好的 <strong>main.py</strong> 文件的目录，输入 <code>python main.py</code>，便可执行，我们称这种方式为脚本编程。</p>\n<h1 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h1><p>在 Python 里，标识符由字母、数字、下划线组成。</p>\n<p>在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。</p>\n<p>Python 中的标识符是区分大小写的。</p>\n<p>以下划线开头的标识符是有特殊意义的。以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；</p>\n<ul>\n<li>以双下划线开头的 __foo 代表类的私有成员</li>\n<li>以双下划线开头和结尾的 __foo__ 代表 Python 里特殊方法专用的标识，如 __init__() 代表类的构造函数。</li>\n</ul>\n<h1 id=\"保留字符\"><a href=\"#保留字符\" class=\"headerlink\" title=\"保留字符\"></a>保留字符</h1><p>下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。</p>\n<p>所有 Python 的关键字只包含小写字母。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">and</td>\n<td style=\"text-align:center\">exec</td>\n<td style=\"text-align:center\">not</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">assert</td>\n<td style=\"text-align:center\">finally</td>\n<td style=\"text-align:center\">or</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">break</td>\n<td style=\"text-align:center\">for</td>\n<td style=\"text-align:center\">pass</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">class</td>\n<td style=\"text-align:center\">from</td>\n<td style=\"text-align:center\">print</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">continue</td>\n<td style=\"text-align:center\">global</td>\n<td style=\"text-align:center\">raise</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">def</td>\n<td style=\"text-align:center\">if</td>\n<td style=\"text-align:center\">return</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">del</td>\n<td style=\"text-align:center\">import</td>\n<td style=\"text-align:center\">try</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">elif</td>\n<td style=\"text-align:center\">in</td>\n<td style=\"text-align:center\">while</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">else</td>\n<td style=\"text-align:center\">is</td>\n<td style=\"text-align:center\">with</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">except</td>\n<td style=\"text-align:center\">lambda</td>\n<td style=\"text-align:center\">yield</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"行和缩进\"><a href=\"#行和缩进\" class=\"headerlink\" title=\"行和缩进\"></a>行和缩进</h1><p>Python的代码不使用大括号 {} 来控制逻辑、作用范围，而是适用行首的空白缩进来控制。<br>行首的空白缩进可以适用 Tab 或者空格来控制，每一个逻辑、作用范围的递进，需要保证相同的缩进量，譬如，一直缩进为4个空格的程序，进入一个判定，但是接下来的缩进量变成了5个空格，则会中断程序的运行。<br>缩进量在一开始就需要定下，然后之后要严格执行，一般建议4个空格作为单位缩进量，并且不要混用 Tab。</p>\n<h2 id=\"多行的语句\"><a href=\"#多行的语句\" class=\"headerlink\" title=\"多行的语句\"></a>多行的语句</h2><p>Python不使用像 C/C++ 一样强制要求分号作为一个语句的结束，在python中一般以新行作为语句的结束符。</p>\n<p>但是我们可以使用斜杠（ \\）将一行的语句分为多行显示，</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">total = a + \\</span><br><span class=\"line\">        b + \\</span><br><span class=\"line\">        c</span><br></pre></td></tr></table></figure>\n<p>语句中包含 [], {} 或 () 括号就不需要使用多行连接符。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">days =  [<span class=\"string\">'Monday'</span>,  <span class=\"string\">'Tuesday'</span>,  <span class=\"string\">'Wednesday'</span>,  </span><br><span class=\"line\">\t\t\t<span class=\"string\">'Thursday'</span>,  <span class=\"string\">'Friday'</span>]</span><br></pre></td></tr></table></figure>\n<p>Python 也可以同一行显示多条语句，方法是用分号 ; 分开，但极不建议这样做。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">'hello'</span>;<span class=\"keyword\">print</span> <span class=\"string\">'World'</span>;</span><br></pre></td></tr></table></figure>\n<h1 id=\"引号\"><a href=\"#引号\" class=\"headerlink\" title=\"引号\"></a>引号</h1><p>Python 可以使用引号( ‘ )、双引号( “ )、三引号( ‘’’ 或 “”” ) 来表示字符串，引号的开始与结束必须的相同类型的。</p>\n<p>其中三引号可以由多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">word =  <span class=\"string\">'word'</span> </span><br><span class=\"line\">sentence =  <span class=\"string\">\"这是一个句子。\"</span> </span><br><span class=\"line\">paragraph =  <span class=\"string\">\"\"\"这是一个段落。</span></span><br><span class=\"line\"><span class=\"string\">包含了多个语句\"\"\"</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><p>python中单行注释采用 # 开头。<br>注释可以在语句或表达式行末：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">answer =  <span class=\"string\">\"42\"</span>  <span class=\"comment\"># 这是一个注释</span></span><br></pre></td></tr></table></figure>\n<p>python 中多行注释使用三个单引号(‘’’)或三个双引号(“””)。</p>\n<h1 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h1><p>\\可以转义很多字符，比如\\n表示换行，\\t表示制表符，字符\\本身也要转义，所以\\\\表示的字符就是\\</p>\n<p>如果字符串里面有很多字符都需要转义，就需要加很多\\，为了简化，Python还允许用r’’表示’’内部的字符串默认不转义。</p>\n<hr>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><ol>\n<li><a href=\"http://www.runoob.com/python/python-basic-syntax.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/python/python-basic-syntax.html</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658624177ea4f8fcb06bc4d0e8aab2fd7aa65dd95000</a></li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cji4oc1tt0001icvaqwnu9a33","category_id":"cji4oc1ty0003icva3gjxmpjh","_id":"cji4oc1u20007icva0dizptgb"},{"post_id":"cji4oc1vn0008icva4dt4brft","category_id":"cji4oc1vq0009icvajkyf2zlv","_id":"cji4rlto6000124va65nzkbsr"},{"post_id":"cji4vn5ge000ccwvadnw3977e","category_id":"cji4oc1vq0009icvajkyf2zlv","_id":"cji4vn5gh000ecwvaw1ourezg"},{"post_id":"cji4vn31i0009cwvabhqvtzlh","category_id":"cji4oc1vq0009icvajkyf2zlv","_id":"cji5kunfc0003ycvau2jnsmhp"}],"PostTag":[{"post_id":"cji4oc1tt0001icvaqwnu9a33","tag_id":"cji4oc1tz0004icvak6he0j8h","_id":"cji4oc1u10006icvaht50kkym"},{"post_id":"cji4oc1vn0008icva4dt4brft","tag_id":"cji4oc1vq000aicva6apcarba","_id":"cji4rlto5000024vansaizcbh"},{"post_id":"cji4vn5ge000ccwvadnw3977e","tag_id":"cji4oc1vq000aicva6apcarba","_id":"cji4vn5gg000dcwvar2qxn8i6"},{"post_id":"cji4vn31i0009cwvabhqvtzlh","tag_id":"cji4oc1vq000aicva6apcarba","_id":"cji5kunfa0002ycva9icwfi09"}],"Tag":[{"name":"Hello World","_id":"cji4oc1tz0004icvak6he0j8h"},{"name":"Python","_id":"cji4oc1vq000aicva6apcarba"}]}}